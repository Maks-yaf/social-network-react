{"version":3,"file":"static/js/563.875fe1d3.chunk.js","mappings":"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","sources":["Utils/Validators/validators.js","components/Common/FormsControls/FormsControls.js","webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","webpack://my-app/./src/components/Common/FormsControls/FormsControls.module.css?8edf"],"sourcesContent":["export const required = (value) => {\r\n   if (value) return undefined;\r\n\r\n   return \"Field are required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\nimport {TextField} from \"@mui/material\";\r\nimport Box from '@mui/material/Box'\r\nimport Input from '@mui/material/Input';\r\n\r\n\r\nexport const FormControl = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div >\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span style={{color: 'red'}}>{meta.error}</span> }\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}>\r\n        <Box sx={{\r\n                width: 500,\r\n                maxWidth: '100%',\r\n            }}>\r\n        <TextField\r\n            className={s.textarea}\r\n            fullWidth\r\n            {...input}\r\n            {...restProps}\r\n            id=\"filled-basic\"\r\n            label=\"\"\r\n            variant=\"filled\" />\r\n        </Box>\r\n    </FormControl>\r\n}\r\n\r\nexport const Inputarea = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}>\r\n\r\n        <Input\r\n            className={s.input}\r\n            {...input}\r\n            {...restProps} />\r\n\r\n    </FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validate, component, props = {}, text = \"\" ) => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   validate={validate}\r\n                   component={component}\r\n                   {...props}\r\n            /> {text}\r\n        </div>\r\n    )\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__QlGkL\",\"dialogItems\":\"Dialogs_dialogItems__Mtel3\",\"messages\":\"Dialogs_messages__rMm3Y\",\"dialogname\":\"Dialogs_dialogname__xs6mF\",\"navlink\":\"Dialogs_navlink__ubeXJ\",\"dialogTextarea\":\"Dialogs_dialogTextarea__WGOH0\"};","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Message_messages__fAR14\",\"message\":\"Message_message__mMp6d\"};","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.massage}</div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialogname}>\r\n            <NavLink to={path} className={s.navlink}>\r\n                <p>{props.name}</p>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../Utils/Validators/validators\";\r\nimport {Button} from \"@mui/material\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogs.map((d) => <DialogItem name={d.name} key={d.id} id={d.id}/>)\r\n    let messageElements = props.messages.map((m) => <Message massage={m.message} key={m.id}/>)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.dialogTextArea)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElements}</div>\r\n                <b className={s.dialogItems}> Enter Message </b>\r\n                <DialogsFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst dialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    className={s.dialogTextarea}\r\n                    name={'dialogTextArea'}\r\n                       component={Textarea}\r\n                       validate={[required, maxLengthCreator(30)]}\r\n                       placeholder={\"Enter your message\"}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button\r\n                    type='submit'\r\n                    variant=\"contained\"\r\n                    size=\"small\"\r\n                >Send Message\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogsFormRedux = reduxForm({form: \"dialog\"})(dialogsForm)\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {addMessageActionCreator} from \"../../Redux/Dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (dialogTextArea) => {\r\n            dispatch(addMessageActionCreator(dialogTextArea))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(Dialogs);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__uxP10\",\"error\":\"FormsControls_error__FRBmD\",\"formSummaryError\":\"FormsControls_formSummaryError__4FbEs\",\"globalForm\":\"FormsControls_globalForm__C-tsj\",\"checkBoxForm\":\"FormsControls_checkBoxForm__Ntvty\",\"dialogTextarea\":\"FormsControls_dialogTextarea__Mcv3u\",\"input\":\"FormsControls_input__bhmBc\",\"textarea\":\"FormsControls_textarea__+BvRr\"};"],"names":["required","value","maxLengthCreator","maxLength","length","concat","FormControl","_ref","input","meta","props","hasError","touched","error","_jsxs","children","_jsx","style","color","Textarea","restProps","Box","sx","width","maxWidth","TextField","className","s","textarea","fullWidth","id","label","variant","Inputarea","Input","createField","placeholder","name","validate","component","arguments","undefined","text","Field","massage","path","NavLink","to","DialogsFormRedux","reduxForm","form","onSubmit","handleSubmit","Button","type","size","dialogsElements","dialogs","map","d","DialogItem","messageElements","messages","m","Message","message","values","addMessage","dialogTextArea","compose","connect","state","newMessageText","dialogsPage","dispatch","addMessageActionCreator","Dialogs"],"sourceRoot":""}