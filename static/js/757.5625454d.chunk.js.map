{"version":3,"file":"static/js/757.5625454d.chunk.js","mappings":"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","sources":["Utils/Validators/validators.js","components/Common/FormsControls/FormsControls.js","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileStatus.module.css?417b","components/Profile/ProfileInfo/ProfileStatusOnHooks.jsx","components/Profile/ProfileInfo/ProfileChangeForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/AddPost/AddPost.module.css?9fed","components/Profile/MyPosts/AddPost/AddPost.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","webpack://my-app/./src/components/Common/FormsControls/FormsControls.module.css?8edf"],"sourcesContent":["export const required = (value) => {\r\n   if (value) return undefined;\r\n\r\n   return \"Field are required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + \" \" + ( hasError? s.error : \" \") }>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span> }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}> <input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validate, component, props = {}, text = \"\" ) => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   validate={validate}\r\n                   component={component}\r\n                   {...props}\r\n            /> {text}\r\n        </div>\r\n    )\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__FXlaS\",\"avatar\":\"ProfileInfo_avatar__3uqWw\",\"mainImg\":\"ProfileInfo_mainImg__b5Iu6\",\"contacts\":\"ProfileInfo_contacts__qOguk\"};","// extracted by mini-css-extract-plugin\nexport default {\"haha\":\"ProfileStatus_haha__O11PR\",\"input\":\"ProfileStatus_input__yB7-U\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileStatus.module.css';\r\n\r\nconst ProfileStatusOnHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode =() => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode =() => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = e => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={s.haha}>\r\n            <div><b>Status:</b></div>\r\n            {!editMode &&\r\n                <div >\r\n                    <span onDoubleClick={activateEditMode}>{status || \"No status\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input autoFocus={true}\r\n                           onChange={onStatusChange}\r\n                           onBlur={deactivateEditMode}\r\n                           value={status}\r\n                           />\r\n                </div>\r\n            }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusOnHooks;\r\n","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from '../../Common/FormsControls/FormsControls.module.css';\r\n\r\nconst ProfileChangeFrom = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {props.error && <div className={style.formSummaryError}>\r\n            {props.error}\r\n        </div>}\r\n            <div>\r\n                <u>Change Profile:</u>\r\n            </div>\r\n            <div>\r\n                <b>My nickname:</b> {createField(\"My nickname\", \"fullName\", [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>\r\n                {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n            </div>\r\n            <div>\r\n                <b>My professional skills:</b> {props.profile.lookingForAJobDescription}\r\n                {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea,)}\r\n            </div>\r\n            <div>\r\n                <b>About Me:</b> {props.profile.aboutMe}\r\n                {createField(\"About Me\", \"aboutMe\", [], Textarea,)}\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b> {Object.keys(props.profile.contacts).map(key => {\r\n                return (\r\n                    <div key={key} className={s.contacts}>\r\n                        <b>{key}:</b> {createField(key, \"contacts.\" + key, [], Input)}\r\n                    </div>\r\n                )\r\n            })}\r\n            </div>\r\n            <div>\r\n                <button onClick={() => {}}>Save\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileChangeFromReduxForm = reduxForm({form: 'edit-profile', destroyOnUnmount: false})(ProfileChangeFrom)\r\n\r\nexport default ProfileChangeFromReduxForm;\r\n","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatusOnHooks from \"./ProfileStatusOnHooks\";\r\nimport userPhoto from \"../../../assets/images/defoltAvatar.png\";\r\nimport ProfileChangeForm from \"./ProfileChangeForm\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.updatePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className={s.mainImg}\r\n                     src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRieAeypWa5G63Ggeofo-8B4TzCjSJd-nyH8UDV3nwK-g&s'/>\r\n            </div>\r\n            <div className={s.avatar}>\r\n                <img src={props.profile.photos.large || userPhoto} alt='profile'/>\r\n                <div>\r\n                    {props.isOwnerID === props.userPageId ?\r\n                        <input type={\"file\"} onChange={onMainPhotoSelected}/> : null}\r\n                </div>\r\n                {editMode\r\n                    ? <ProfileChangeForm initialValues={props.profile}\r\n                                         profile={props.profile}\r\n                                         onSubmit={onSubmit}\r\n                    />\r\n                    : <ProfileDescription profile={props.profile}\r\n                                          isOwnerID={props.isOwnerID}\r\n                                          userPageId={props.userPageId}\r\n                                          goToEditMode={ () => {setEditMode(true)}}\r\n                    />}\r\n                <ProfileStatusOnHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileDescription = (props) => {\r\n    return (\r\n        <div className={s.discriptionBlock}>\r\n            <div>\r\n                <h4><b><u>My profile info:</u></b></h4>\r\n            </div>\r\n            <div>\r\n                <b>My nickname: </b>{props.profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b> {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            <div>\r\n                {props.profile.lookingForAJob &&\r\n                    <div>\r\n                        <b>My professional skills:</b> {props.profile.lookingForAJobDescription}\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div>\r\n                {props.profile.aboutMe &&\r\n                    <div>\r\n                        <b>About Me:</b> {props.profile.aboutMe}\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div>\r\n                {\r\n                    props.profile.contacts &&\r\n                    <div>\r\n                        <b>Contacts:</b> {Object.keys(props.profile.contacts).map(key => {\r\n                        return <Contacts key={key}\r\n                                         contactTitle={key}\r\n                                         contactValue={props.profile.contacts[key]}/>\r\n                    })}\r\n                    </div>\r\n                }\r\n            </div>\r\n            {props.isOwnerID === props.userPageId\r\n                ? <div> <button onClick={props.goToEditMode}> Edit Description </button> </div>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contacts = (props) => {\r\n    return (\r\n        props.contactValue &&\r\n        <div className={s.contacts}>\r\n            <b>{props.contactTitle}</b>: {props.contactValue}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postBlock\":\"MyPosts_postBlock__XxNhL\",\"posts\":\"MyPosts_posts__jmw8G\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"AddPost_item__Nis5W\",\"like\":\"AddPost_like__qVy0d\"};","import React from 'react';\r\nimport s from './AddPost.module.css';\r\n\r\nconst AddPost = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://img.freepik.com/premium-photo/cute-asian-girl-kawaii-anime-avatar-ai-generative-art_225753-9233.jpg\" ></img>\r\n            {props.message}\r\n            <div className={s.like}>\r\n                like {props.like}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPost;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport AddPost from \"./AddPost/AddPost\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../Utils/Validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts =props => {\r\n    let postsElement = [...props.posts]\r\n        .reverse()\r\n        .map((p) => <AddPost key={p.id} message={p.message} like={p.like} key={p.id}/>)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.postTextArea);\r\n    };\r\n\r\n    return (\r\n\r\n        <div className={s.postBlock}>\r\n            <h3> My post </h3>\r\n            <PostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst PostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'postTextArea'}\r\n                       component={Textarea}\r\n                       placeholder={\"Hi, how are you\"}\r\n                       validate={[required, maxLengthCreator(10)]}/>\r\n            </div>\r\n            <div>\r\n                <button type='submit'>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst PostFormRedux = reduxForm({form: \"post\"})(PostForm)\r\n\r\nexport default MyPosts;\r\n\r\n// Старый и новый код для форм\r\n// <h3> My post </h3>\r\n// <div>\r\n//     <div>\r\n//                     <textarea onChange={onPostChange}\r\n//                               ref={newPostElement}\r\n//                               value={props.newPostText}/>\r\n//     </div>\r\n//     <div>\r\n//         <button onClick={onAddPost}>Add post</button>\r\n//         <button>Remove</button>\r\n//     </div>\r\n// </div>\r\n//\r\n// <PostForm onAddPost={onAddPost}\r\n//       onPostChange={onPostChange}\r\n//       newPostText={props.newPostText}\r\n//       newPostElement={newPostElement}\r\n// />\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../Redux/Profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts,\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (postTextArea) => {\r\n            dispatch(addPostActionCreator(postTextArea))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         isOwnerID={props.isOwnerID}\r\n                         userPageId={props.userPageId}\r\n\r\n                         updateStatus={props.updateStatus}\r\n                         updatePhoto={props.updatePhoto}\r\n                         saveProfile={props.saveProfile}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n\r\n","import React, {useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, profileInfo, saveProfile, updatePhoto, updateStatus} from \"../../Redux/Profile-reducer\";\r\nimport {useParams} from 'react-router-dom'\r\nimport {compose} from \"redux\";\r\n\r\nfunction ProfileContainer(props) {\r\n    let {userId} = useParams();\r\n    if (!userId) {\r\n        userId = props.authUserId;\r\n        if (!userId) {\r\n            window.location.href = '/login';\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.profileInfo(userId)\r\n    }, [userId]);\r\n    useEffect(() => {\r\n        props.getStatus(userId)\r\n    }, [userId]);\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <Profile profile={props.profile}\r\n                         status={props.status}\r\n                         isOwnerID={props.authUserId}\r\n                         userPageId={userId}\r\n\r\n                         updateStatus={props.updateStatus}\r\n                         updatePhoto={props.updatePhoto}\r\n                         saveProfile={props.saveProfile}\r\n\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth,\r\n    })\r\n\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {profileInfo, getStatus, updateStatus, updatePhoto, saveProfile}\r\n    ),\r\n)(ProfileContainer)\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__uxP10\",\"error\":\"FormsControls_error__FRBmD\",\"formSummaryError\":\"FormsControls_formSummaryError__4FbEs\"};"],"names":["required","value","maxLengthCreator","maxLength","length","concat","FormControl","_ref","input","meta","props","hasError","touched","error","_jsxs","className","s","formControl","children","_jsx","Textarea","restProps","Input","createField","placeholder","name","validate","component","arguments","undefined","text","Field","editMode","setEditMode","useState","status","setStatus","useEffect","_Fragment","onDoubleClick","activateEditMode","autoFocus","onChange","e","currentTarget","onBlur","deactivateEditMode","updateStatus","reduxForm","form","destroyOnUnmount","onSubmit","handleSubmit","style","formSummaryError","type","profile","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","onClick","ProfileDescription","fullName","lookingForAJob","Contacts","contactTitle","contactValue","isOwnerID","userPageId","goToEditMode","Preloader","src","photos","large","userPhoto","alt","target","files","updatePhoto","ProfileChangeForm","initialValues","formData","saveProfile","then","ProfileStatusOnHooks","message","like","PostFormRedux","postsElement","posts","reverse","p","AddPost","id","values","addPost","postTextArea","connect","state","newPostText","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileInfo","MyPostsContainer","compose","authUserId","auth","isAuth","profileInfo","getStatus","userId","useParams","window","location","href","Profile"],"sourceRoot":""}