{"version":3,"file":"static/js/318.9073419f.chunk.js","mappings":"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","sources":["Utils/Validators/validators.js","components/Common/FormsControls/FormsControls.js","components/Login/Login.jsx","webpack://my-app/./src/components/Common/FormsControls/FormsControls.module.css?8edf"],"sourcesContent":["export const required = (value) => {\r\n   if (value) return undefined;\r\n\r\n   return \"Field are required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + \" \" + ( hasError? s.error : \" \") }>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span> }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}> <input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validate, component, props = {}, text = \"\" ) => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder}\r\n                   name={name}\r\n                   validate={validate}\r\n                   component={component}\r\n                   {...props}\r\n            /> {text}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../Utils/Validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/Auth-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport s from \"../../../src/components/Common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'email'}\r\n                       placeholder={'email'}\r\n                       component={Input}\r\n                       validate={[required, maxLengthCreator(50)]}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'password'}\r\n                       placeholder={'password'}\r\n                       type={'password'}\r\n                       component={Input}\r\n                       validate={[required, maxLengthCreator(50)]}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'rememberMe'}\r\n                       component={'input'}\r\n                       type={'checkbox'}/>\r\n                Remember me\r\n            </div>\r\n            {props.captchaUrl\r\n                && <img src={props.captchaUrl}/> }\r\n            {props.captchaUrl\r\n                && <div>\r\n                <Field name={'captcha'}\r\n                       placeholder={'Symbols from image'}\r\n                       component={Input}\r\n                       validate={[required, maxLengthCreator(10)]}/>\r\n            </div>}\r\n            {props.error && <div className={s.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button type='submit'>LOGIN</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxLoginForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    if (props.isAuth) {\r\n        return (\r\n            <Navigate to={\"/profile\"}/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <ReduxLoginForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth,\r\n})\r\nexport default connect(mapStateToProps, {login})(Login);","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__uxP10\",\"error\":\"FormsControls_error__FRBmD\",\"formSummaryError\":\"FormsControls_formSummaryError__4FbEs\"};"],"names":["required","value","maxLengthCreator","maxLength","length","concat","FormControl","_ref","input","meta","props","hasError","touched","error","_jsxs","className","s","formControl","children","_jsx","Textarea","restProps","Input","createField","placeholder","name","validate","component","arguments","undefined","text","Field","ReduxLoginForm","reduxForm","form","onSubmit","handleSubmit","type","captchaUrl","src","formSummaryError","connect","state","auth","isAuth","login","Navigate","to","formData","email","password","rememberMe","captcha"],"sourceRoot":""}