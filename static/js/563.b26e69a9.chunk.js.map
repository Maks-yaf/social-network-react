{"version":3,"file":"static/js/563.b26e69a9.chunk.js","mappings":"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","sources":["Utils/Validators/validators.js","components/Common/FormsControls/FormsControls.js","webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://my-app/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","webpack://my-app/./src/components/Common/FormsControls/FormsControls.module.css?8edf"],"sourcesContent":["export const required = (value) => {\r\n   if (value) return undefined;\r\n\r\n   return \"Field are required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\r\n    return undefined;\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport s from \"./FormsControls.module.css\"\r\n\r\nexport const FormControl = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={s.formControl + \" \" + ( hasError? s.error : \" \") }>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span> }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props\r\n    return <FormControl {...props}> <input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__QlGkL\",\"dialogItems\":\"Dialogs_dialogItems__Mtel3\",\"active\":\"Dialogs_active__EsfZk\",\"messages\":\"Dialogs_messages__rMm3Y\",\"message\":\"Dialogs_message__fWMNH\"};","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Message_messages__fAR14\",\"message\":\"Message_message__mMp6d\"};","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.massage}</div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../Utils/Validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogs.map((d) => <DialogItem name={d.name} key={d.id} id={d.id}/>)\r\n    let messageElements = props.messages.map((m, index) => <Message massage={m.message} key={m.id}/>)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.dialogTextArea)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElements}</div>\r\n                <DialogsFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst dialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'dialogTextArea'}\r\n                       component={Textarea}\r\n                       validate={[required, maxLengthCreator(30)]}\r\n                       placeholder={\"Enter your message\"}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button type='submit'>Add Message</button>\r\n                <button type='submit'>Remove</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogsFormRedux = reduxForm({form: \"dialog\"})(dialogsForm)\r\n\r\nexport default Dialogs;\r\n\r\n\r\n///Старый и новый код для форм\r\n// <div>\r\n//     <textarea placeholder={\"Enter your message\"}\r\n//               onChange={onMassageChange}\r\n//               value={props.newMessageText}/>\r\n// </div>\r\n// <div>\r\n//     <button onClick={onAddMessage}>Add Message</button>\r\n//     <button>Remove</button>\r\n// </div>\r\n//     <DialogsForm\r\n//         onAddMessage={onAddMessage}\r\n//         onMassageChange={onMassageChange}\r\n//         newMessageText={props.newMessageText}/>\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {addMessageActionCreator} from \"../../Redax/Dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (dialogTextArea) => {\r\n            dispatch(addMessageActionCreator(dialogTextArea))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    // withAuthNavigate,\r\n)(Dialogs);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__uxP10\",\"error\":\"FormsControls_error__FRBmD\",\"formSummaryError\":\"FormsControls_formSummaryError__4FbEs\"};"],"names":["required","value","maxLengthCreator","maxLength","length","concat","FormControl","_ref","input","meta","props","hasError","touched","error","_jsxs","className","s","formControl","children","_jsx","Textarea","restProps","Input","massage","path","id","dialog","NavLink","to","name","DialogsFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","placeholder","type","dialogsElements","dialogs","map","d","DialogItem","messageElements","messages","m","index","Message","message","dialogItems","values","addMessage","dialogTextArea","compose","connect","state","newMessageText","dialogsPage","dispatch","addMessageActionCreator","Dialogs"],"sourceRoot":""}