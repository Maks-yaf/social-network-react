{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maksi\\\\Desktop\\\\React\\\\Project\\\\01\\\\my-app\\\\src\\\\components\\\\Dialogs\\\\Dialogs.jsx\";\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport { NavLink } from \"react-router-dom\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.message,\n    children: props.massage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_c = Message;\nconst Dialogs = props => {\n  let dialogs = [{\n    id: 1,\n    name: \"Max\"\n  }, {\n    id: 2,\n    name: \"Angelika\"\n  }, {\n    id: 3,\n    name: \"Aneta\"\n  }, {\n    id: 4,\n    name: \"Zoja\"\n  }, {\n    id: 5,\n    name: \"Andjei\"\n  }, {\n    id: 6,\n    name: \"Marysia\"\n  }];\n  let messages = [{\n    id: 1,\n    message: \"Hi\"\n  }, {\n    id: 2,\n    message: \"How is your day?\"\n  }, {\n    id: 3,\n    message: \"You\"\n  }, {\n    id: 4,\n    message: \"You\"\n  }, {\n    id: 5,\n    message: \"You\"\n  }];\n  let dialogsElements = dialogs.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: d.name,\n    id: d.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 46\n  }, this));\n  let messageElements = messages.map((m, index) => /*#__PURE__*/_jsxDEV(Message, {\n    massage: m.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 54\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogItems,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.messages,\n      children: messageElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Dialogs;\nexport default Dialogs;\nvar _c, _c2;\n$RefreshReg$(_c, \"Message\");\n$RefreshReg$(_c2, \"Dialogs\");","map":{"version":3,"names":["React","s","NavLink","DialogItem","jsxDEV","_jsxDEV","Message","props","className","message","children","massage","fileName","_jsxFileName","lineNumber","columnNumber","_c","Dialogs","dialogs","id","name","messages","dialogsElements","map","d","messageElements","m","index","dialogItems","_c2","$RefreshReg$"],"sources":["C:/Users/maksi/Desktop/React/Project/01/my-app/src/components/Dialogs/Dialogs.jsx"],"sourcesContent":["import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.massage}</div>\r\n    )\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogs = [\r\n        {id: 1, name: \"Max\"},\r\n        {id: 2, name: \"Angelika\"},\r\n        {id: 3, name: \"Aneta\"},\r\n        {id: 4, name: \"Zoja\"},\r\n        {id: 5, name: \"Andjei\"},\r\n        {id: 6, name: \"Marysia\"},\r\n    ];\r\n\r\n    let messages = [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How is your day?\"},\r\n        {id: 3, message: \"You\"},\r\n        {id: 4, message: \"You\"},\r\n        {id: 5, message: \"You\"},\r\n    ];\r\n\r\n    let dialogsElements = dialogs.map((d) => <DialogItem name={d.name} id={d.id}/>)\r\n    let messageElements = messages.map((m, index) => <Message massage={m.message}/>)\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messageElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,sBAAsB;AACpC,SAAQC,OAAO,QAAO,kBAAkB;AACxC,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjD,MAAMC,OAAO,GAAIC,KAAK,IAAK;EACvB,oBACIF,OAAA;IAAKG,SAAS,EAAEP,CAAC,CAACQ,OAAQ;IAAAC,QAAA,EAAEH,KAAK,CAACI;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAExD,CAAC;AAAAC,EAAA,GAJKV,OAAO;AAMb,MAAMW,OAAO,GAAIV,KAAK,IAAK;EAEvB,IAAIW,OAAO,GAAG,CACV;IAACC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAK,CAAC,EACpB;IAACD,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAU,CAAC,EACzB;IAACD,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAO,CAAC,EACtB;IAACD,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAM,CAAC,EACrB;IAACD,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAQ,CAAC,EACvB;IAACD,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAS,CAAC,CAC3B;EAED,IAAIC,QAAQ,GAAG,CACX;IAACF,EAAE,EAAE,CAAC;IAAEV,OAAO,EAAE;EAAI,CAAC,EACtB;IAACU,EAAE,EAAE,CAAC;IAAEV,OAAO,EAAE;EAAkB,CAAC,EACpC;IAACU,EAAE,EAAE,CAAC;IAAEV,OAAO,EAAE;EAAK,CAAC,EACvB;IAACU,EAAE,EAAE,CAAC;IAAEV,OAAO,EAAE;EAAK,CAAC,EACvB;IAACU,EAAE,EAAE,CAAC;IAAEV,OAAO,EAAE;EAAK,CAAC,CAC1B;EAED,IAAIa,eAAe,GAAGJ,OAAO,CAACK,GAAG,CAAEC,CAAC,iBAAKnB,OAAA,CAACF,UAAU;IAACiB,IAAI,EAAEI,CAAC,CAACJ,IAAK;IAACD,EAAE,EAAEK,CAAC,CAACL;EAAG;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC,CAAC;EAC/E,IAAIU,eAAe,GAAGJ,QAAQ,CAACE,GAAG,CAAC,CAACG,CAAC,EAAEC,KAAK,kBAAKtB,OAAA,CAACC,OAAO;IAACK,OAAO,EAAEe,CAAC,CAACjB;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC,CAAC;EAEhF,oBACIV,OAAA;IAAKG,SAAS,EAAEP,CAAC,CAACiB,OAAQ;IAAAR,QAAA,gBACtBL,OAAA;MAAKG,SAAS,EAAEP,CAAC,CAAC2B,WAAY;MAAAlB,QAAA,EACzBY;IAAe;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eACNV,OAAA;MAAKG,SAAS,EAAEP,CAAC,CAACoB,QAAS;MAAAX,QAAA,EACtBe;IAAe;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACc,GAAA,GAhCIZ,OAAO;AAkCb,eAAeA,OAAO;AAAC,IAAAD,EAAA,EAAAa,GAAA;AAAAC,YAAA,CAAAd,EAAA;AAAAc,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}