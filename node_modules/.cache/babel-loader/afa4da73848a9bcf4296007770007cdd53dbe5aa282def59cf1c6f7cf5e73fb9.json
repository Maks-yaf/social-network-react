{"ast":null,"code":"import { authAPI, usersAPI } from \"../API/Api\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nconst SET_USER_DATA = \"SET_USER_DATA\";\nlet initialState = {\n  id: null,\n  email: null,\n  login: null,\n  isFetching: false,\n  isAuth: false\n};\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_IS_FETCHING:\n      {\n        return {\n          ...state,\n          isFetching: action.isFetching\n        };\n      }\n    case SET_USER_DATA:\n      {\n        return {\n          ...state,\n          ...action.payload,\n          isAuth: true\n        };\n      }\n    default:\n      return state;\n  }\n};\n\n///ActionCreator\nexport const setUserData = (id, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: {\n    id,\n    email,\n    login,\n    isAuth\n  }\n});\n\n///ThunkCreator\nexport const authMe = () => {\n  return dispatch => {\n    authAPI.getAuthMe().then(data => {\n      if (data.resultCode === 0) {\n        let {\n          id,\n          email,\n          login\n        } = data.data;\n        dispatch(setUserData(id, email, login, true));\n      }\n    });\n  };\n};\nexport const login = (email, password, rememberMe) => {\n  return dispatch => {\n    authAPI.login(email, password, rememberMe).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(authMe());\n      }\n    });\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    authAPI.logout().then(data => {\n      if (data.resultCode === 0) {\n        dispatch(authMe());\n      }\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"names":["authAPI","usersAPI","TOGGLE_IS_FETCHING","SET_USER_DATA","initialState","id","email","login","isFetching","isAuth","authReducer","state","action","type","payload","setUserData","authMe","dispatch","getAuthMe","then","data","resultCode","password","rememberMe","logout"],"sources":["C:/Users/maksi/Desktop/React/Project/01/my-app/src/Redax/Auth-reducer.js"],"sourcesContent":["import {authAPI, usersAPI} from \"../API/Api\";\r\n\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isFetching: false,\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuth: true,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n///ActionCreator\r\nexport const setUserData = (id, email, login, isAuth) => ({type: SET_USER_DATA, payload: {id, email, login, isAuth}})\r\n\r\n///ThunkCreator\r\nexport const authMe = () => {\r\n    return (dispatch) => {\r\n        authAPI.getAuthMe()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    let {id, email, login} = data.data;\r\n                    dispatch(setUserData(id, email, login, true));\r\n                }});\r\n            }\r\n    }\r\nexport const login = (email, password, rememberMe) => {\r\n    return (dispatch) => {\r\n        authAPI.login(email, password, rememberMe)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                   dispatch(authMe())\r\n                }});\r\n    }\r\n}\r\nexport const logout = () => {\r\n    return (dispatch) => {\r\n        authAPI.logout()\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(authMe())\r\n                }});\r\n    }\r\n}\r\n\r\nexport default authReducer;"],"mappings":"AAAA,SAAQA,OAAO,EAAEC,QAAQ,QAAO,YAAY;AAE5C,MAAMC,kBAAkB,GAAG,oBAAoB;AAC/C,MAAMC,aAAa,GAAG,eAAe;AAErC,IAAIC,YAAY,GAAG;EACfC,EAAE,EAAE,IAAI;EACRC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,IAAI;EACXC,UAAU,EAAE,KAAK;EACjBC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGP,YAAY,EAAEQ,MAAM,KAAK;EAClD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKX,kBAAkB;MAAE;QACrB,OAAO;UACH,GAAGS,KAAK;UACRH,UAAU,EAAEI,MAAM,CAACJ;QACvB,CAAC;MACL;IACA,KAAKL,aAAa;MAAE;QAChB,OAAO;UACH,GAAGQ,KAAK;UACR,GAAGC,MAAM,CAACE,OAAO;UACjBL,MAAM,EAAE;QACZ,CAAC;MACL;IACA;MACI,OAAOE,KAAK;EACpB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMI,WAAW,GAAGA,CAACV,EAAE,EAAEC,KAAK,EAAEC,KAAK,EAAEE,MAAM,MAAM;EAACI,IAAI,EAAEV,aAAa;EAAEW,OAAO,EAAE;IAACT,EAAE;IAAEC,KAAK;IAAEC,KAAK;IAAEE;EAAM;AAAC,CAAC,CAAC;;AAErH;AACA,OAAO,MAAMO,MAAM,GAAGA,CAAA,KAAM;EACxB,OAAQC,QAAQ,IAAK;IACjBjB,OAAO,CAACkB,SAAS,CAAC,CAAC,CACdC,IAAI,CAACC,IAAI,IAAI;MACV,IAAIA,IAAI,CAACC,UAAU,KAAK,CAAC,EAAE;QACvB,IAAI;UAAChB,EAAE;UAAEC,KAAK;UAAEC;QAAK,CAAC,GAAGa,IAAI,CAACA,IAAI;QAClCH,QAAQ,CAACF,WAAW,CAACV,EAAE,EAAEC,KAAK,EAAEC,KAAK,EAAE,IAAI,CAAC,CAAC;MACjD;IAAC,CAAC,CAAC;EACP,CAAC;AACT,CAAC;AACL,OAAO,MAAMA,KAAK,GAAGA,CAACD,KAAK,EAAEgB,QAAQ,EAAEC,UAAU,KAAK;EAClD,OAAQN,QAAQ,IAAK;IACjBjB,OAAO,CAACO,KAAK,CAACD,KAAK,EAAEgB,QAAQ,EAAEC,UAAU,CAAC,CACrCJ,IAAI,CAACC,IAAI,IAAI;MACV,IAAIA,IAAI,CAACC,UAAU,KAAK,CAAC,EAAE;QACxBJ,QAAQ,CAACD,MAAM,CAAC,CAAC,CAAC;MACrB;IAAC,CAAC,CAAC;EACf,CAAC;AACL,CAAC;AACD,OAAO,MAAMQ,MAAM,GAAGA,CAAA,KAAM;EACxB,OAAQP,QAAQ,IAAK;IACjBjB,OAAO,CAACwB,MAAM,CAAC,CAAC,CACXL,IAAI,CAACC,IAAI,IAAI;MACV,IAAIA,IAAI,CAACC,UAAU,KAAK,CAAC,EAAE;QACvBJ,QAAQ,CAACD,MAAM,CAAC,CAAC,CAAC;MACtB;IAAC,CAAC,CAAC;EACf,CAAC;AACL,CAAC;AAED,eAAeN,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}