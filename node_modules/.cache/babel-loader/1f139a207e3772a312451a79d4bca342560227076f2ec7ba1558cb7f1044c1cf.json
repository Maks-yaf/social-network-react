{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maksi\\\\Desktop\\\\React\\\\Project\\\\01\\\\my-app\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { follow, setCurrentPage, setTotalUsersCount, setUsers, toggleIsFetching, unfollow } from \"../../Redax/Users-reducer\";\nimport axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from \"../Common/Preloader/Preloader\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.onPageChanged = pageNumber => {\n      this.props.toggleIsFetching(true);\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`, {\n        withCredentials: true\n      }).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`, {\n      withCredentials: true\n    }).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 42\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        users: this.props.users,\n        onPageChanged: this.onPageChanged,\n        unfollow: this.props.unfollow,\n        follow: this.props.follow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (userID) => {\n//             dispatch(followAC(userID))\n//         },\n//         unfollow: (userID) => {\n//             dispatch(unfollowAC(userID))\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users))\n//         },\n//         setCurrentPage: (currentPage) => {\n//             dispatch(setCurrentPageAC(currentPage))\n//         },\n//         setTotalUsersCount: (totalCount) => {\n//             dispatch(setTotalUsersCountAC(totalCount))\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(toggleIsFetchingAC(isFetching))\n//         }\n//\n//\n//     }\n// }\n\nlet objOfDispatch = {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching\n};\nexport default connect(mapStateToProps, objOfDispatch)(UsersContainer);","map":{"version":3,"names":["React","connect","follow","setCurrentPage","setTotalUsersCount","setUsers","toggleIsFetching","unfollow","axios","Users","Preloader","jsxDEV","_jsxDEV","Fragment","_Fragment","UsersContainer","Component","constructor","args","onPageChanged","pageNumber","props","get","pageSize","withCredentials","then","response","data","items","componentDidMount","currentPage","totalCount","render","children","isFetching","fileName","_jsxFileName","lineNumber","columnNumber","totalUsersCount","users","mapStateToProps","state","usersPage","objOfDispatch"],"sources":["C:/Users/maksi/Desktop/React/Project/01/my-app/src/components/Users/UsersContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleIsFetching,\r\n    unfollow\r\n} from \"../../Redax/Users-reducer\";\r\nimport axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true)\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`, {\r\n            withCredentials: true,\r\n        })\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(response.data.items)\r\n                this.props.setTotalUsersCount(response.data.totalCount)\r\n            });\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.toggleIsFetching(true)\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`, {\r\n            withCredentials: true,\r\n        })\r\n            .then(response => {\r\n                this.props.toggleIsFetching(false)\r\n                this.props.setUsers(response.data.items)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       users={this.props.users}\r\n                       onPageChanged={this.onPageChanged}\r\n                       unfollow={this.props.unfollow}\r\n                       follow={this.props.follow}\r\n\r\n\r\n                />\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n    }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userID) => {\r\n//             dispatch(followAC(userID))\r\n//         },\r\n//         unfollow: (userID) => {\r\n//             dispatch(unfollowAC(userID))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (currentPage) => {\r\n//             dispatch(setCurrentPageAC(currentPage))\r\n//         },\r\n//         setTotalUsersCount: (totalCount) => {\r\n//             dispatch(setTotalUsersCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//\r\n//\r\n//     }\r\n// }\r\n\r\nlet objOfDispatch = {\r\n    follow,\r\n    unfollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    toggleIsFetching,\r\n}\r\n\r\nexport default connect(mapStateToProps, objOfDispatch)(UsersContainer);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}