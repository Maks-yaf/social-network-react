{"ast":null,"code":"import React from 'react';\nimport { addPostActionCreator, updateNewPostChangeActionCreator } from \"../../../Redax/Profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n\n// const MyPostsContainer = () => {\n//     debugger;\n//\n//     // let state = props.store.getState().profilePage;\n//     //\n//     // let addPost = () => {\n//     //     props.store.dispatch(addPostActionCreator());\n//     // };\n//     //\n//     // let onPostChange = (text) => {\n//     //     let action = updateNewPostChangeActionCreator(text);\n//     //     props.store.dispatch(action);\n//     // };\n//\n//     return (\n//         <StoreContext.Consumer>\n//             {(store) => {\n//                 let state = store.getState().profilePage;\n//                 let addPost = () => {\n//                     store.dispatch(addPostActionCreator());\n//                 }\n//                 let onPostChange = (text) => {\n//                     let action = updateNewPostChangeActionCreator(text);\n//                     store.dispatch(action);\n//                 }\n//\n//                 return (\n//                     <MyPosts\n//                         updateNewPostChange={onPostChange}\n//                         addPost={addPost}\n//                         posts={state.posts}\n//                         newPostText={state.newPostText}/>)\n//             }\n//             }\n//         </StoreContext.Consumer>\n//     )\n// };\n\nlet mapStateToProps = state => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  };\n};\nlet mapDispatchToProps = dispatch => {\n  return {\n    addPost: () => {\n      dispatch(addPostActionCreator());\n    },\n    updateNewPostChange: text => {\n      let action = updateNewPostChangeActionCreator(text);\n      dispatch(action);\n    }\n  };\n};\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;","map":{"version":3,"names":["React","addPostActionCreator","updateNewPostChangeActionCreator","MyPosts","connect","mapStateToProps","state","posts","profilePage","newPostText","mapDispatchToProps","dispatch","addPost","updateNewPostChange","text","action","MyPostsContainer"],"sources":["C:/Users/maksi/Desktop/React/Project/01/my-app/src/components/Profile/MyPosts/MyPostsContainer.jsx"],"sourcesContent":["import React from 'react';\r\nimport {addPostActionCreator, updateNewPostChangeActionCreator} from \"../../../Redax/Profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// const MyPostsContainer = () => {\r\n//     debugger;\r\n//\r\n//     // let state = props.store.getState().profilePage;\r\n//     //\r\n//     // let addPost = () => {\r\n//     //     props.store.dispatch(addPostActionCreator());\r\n//     // };\r\n//     //\r\n//     // let onPostChange = (text) => {\r\n//     //     let action = updateNewPostChangeActionCreator(text);\r\n//     //     props.store.dispatch(action);\r\n//     // };\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {(store) => {\r\n//                 let state = store.getState().profilePage;\r\n//                 let addPost = () => {\r\n//                     store.dispatch(addPostActionCreator());\r\n//                 }\r\n//                 let onPostChange = (text) => {\r\n//                     let action = updateNewPostChangeActionCreator(text);\r\n//                     store.dispatch(action);\r\n//                 }\r\n//\r\n//                 return (\r\n//                     <MyPosts\r\n//                         updateNewPostChange={onPostChange}\r\n//                         addPost={addPost}\r\n//                         posts={state.posts}\r\n//                         newPostText={state.newPostText}/>)\r\n//             }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// };\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n        updateNewPostChange: (text) => {\r\n            let action = updateNewPostChangeActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,oBAAoB,EAAEC,gCAAgC,QAAO,gCAAgC;AACrG,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAAQC,OAAO,QAAO,aAAa;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,eAAe,GAAIC,KAAK,IAAK;EAC7B,OAAO;IACHC,KAAK,EAAED,KAAK,CAACE,WAAW,CAACD,KAAK;IAC9BE,WAAW,EAAEH,KAAK,CAACE,WAAW,CAACC;EACnC,CAAC;AACL,CAAC;AACD,IAAIC,kBAAkB,GAAIC,QAAQ,IAAK;EACnC,OAAO;IACHC,OAAO,EAAEA,CAAA,KAAM;MACXD,QAAQ,CAACV,oBAAoB,CAAC,CAAC,CAAC;IACpC,CAAC;IACDY,mBAAmB,EAAGC,IAAI,IAAK;MAC3B,IAAIC,MAAM,GAAGb,gCAAgC,CAACY,IAAI,CAAC;MACnDH,QAAQ,CAACI,MAAM,CAAC;IACpB;EACJ,CAAC;AACL,CAAC;AAED,MAAMC,gBAAgB,GAAGZ,OAAO,CAACC,eAAe,EAAEK,kBAAkB,CAAC,CAACP,OAAO,CAAC;AAE9E,eAAea,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}