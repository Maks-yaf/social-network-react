{"ast":null,"code":"const ADD_MESSAGE = \"ADD_MESSAGE\";\nconst UPDATE_NEW_MESSAGE_CHANGE = \"UPDATE_NEW_MESSAGE_CHANGE\";\nlet store = {\n  _state: {\n    profilePage: {\n      posts: [{\n        id: 1,\n        message: \"Hi, How are you\",\n        like: 15\n      }, {\n        id: 2,\n        message: \"Hi, it's my first post\",\n        like: 10\n      }, {\n        id: 3,\n        message: \"412412\",\n        like: 123\n      }, {\n        id: 4,\n        message: \"ohohohooh\",\n        like: 1123\n      }],\n      newPostText: \"Hi, How are you\"\n    },\n    dialogsPage: {\n      messages: [{\n        id: 1,\n        message: \"Hi\"\n      }, {\n        id: 2,\n        message: \"How is your day?\"\n      }, {\n        id: 3,\n        message: \"You\"\n      }, {\n        id: 4,\n        message: \"You\"\n      }, {\n        id: 5,\n        message: \"You\"\n      }],\n      dialogs: [{\n        id: 1,\n        name: \"Max\"\n      }, {\n        id: 2,\n        name: \"Angelika\"\n      }, {\n        id: 3,\n        name: \"Aneta\"\n      }, {\n        id: 4,\n        name: \"Zoja\"\n      }, {\n        id: 5,\n        name: \"Andjei\"\n      }, {\n        id: 6,\n        name: \"Marysia\"\n      }],\n      newMessageText: \"\"\n    },\n    sidebar: {}\n  },\n  \"_rerenderEntireTreePererisovka\"() {\n    console.log(\"ebobo\");\n  },\n  \"getState\"() {\n    return this._state;\n  },\n  \"subscribe\"(observer) {\n    this._rerenderEntireTreePererisovka = observer;\n  },\n  \"dispatch\"(action) {\n    if (action.type === ADD_POST) {\n      let newPost = {\n        id: 5,\n        message: this._state.profilePage.newPostText,\n        like: 0\n      };\n      this._state.profilePage.posts.push(newPost);\n      this._state.profilePage.newPostText = \"\";\n      this._rerenderEntireTreePererisovka(this._state);\n    } else if (action.type === UPDATE_NEW_POST_CHANGE) {\n      this._state.profilePage.newPostText = action.newText;\n      this._rerenderEntireTreePererisovka(this._state);\n    } else if (action.type === ADD_MESSAGE) {\n      let newMessage = {\n        id: 6,\n        message: this._state.dialogsPage.newMessageText\n      };\n      this._state.dialogsPage.messages.push(newMessage);\n      this._state.dialogsPage.newMessageText = \"\";\n      this._rerenderEntireTreePererisovka(this._state);\n    } else if (action.type === UPDATE_NEW_MESSAGE_CHANGE) {\n      this._state.dialogsPage.newMessageText = action.newMessage;\n      this._rerenderEntireTreePererisovka(this._state);\n    }\n  }\n};\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostChangeActionCreator = text => ({\n  type: UPDATE_NEW_POST_CHANGE,\n  newText: text\n});\nexport const addMessageActionCreator = () => ({\n  type: ADD_MESSAGE\n});\nexport const updateNewMessageChangeActionCreator = text => ({\n  type: UPDATE_NEW_MESSAGE_CHANGE,\n  newMessage: text\n});\nexport default store;\n\n// window.store = store;","map":{"version":3,"names":["ADD_MESSAGE","UPDATE_NEW_MESSAGE_CHANGE","store","_state","profilePage","posts","id","message","like","newPostText","dialogsPage","messages","dialogs","name","newMessageText","sidebar","_rerenderEntireTreePererisovka","console","log","getState","subscribe","observer","dispatch","action","type","ADD_POST","newPost","push","UPDATE_NEW_POST_CHANGE","newText","newMessage","addPostActionCreator","updateNewPostChangeActionCreator","text","addMessageActionCreator","updateNewMessageChangeActionCreator"],"sources":["C:/Users/maksi/Desktop/React/Project/01/my-app/src/Redax/State.js"],"sourcesContent":["const ADD_MESSAGE= \"ADD_MESSAGE\";\r\nconst UPDATE_NEW_MESSAGE_CHANGE = \"UPDATE_NEW_MESSAGE_CHANGE\"\r\n\r\n\r\nlet store = {\r\n    _state: {\r\n        profilePage: {\r\n            posts: [\r\n                {id: 1, message: \"Hi, How are you\", like: 15},\r\n                {id: 2, message: \"Hi, it's my first post\", like: 10},\r\n                {id: 3, message: \"412412\", like: 123},\r\n                {id: 4, message: \"ohohohooh\", like: 1123},\r\n            ],\r\n            newPostText: \"Hi, How are you\",\r\n        },\r\n        dialogsPage: {\r\n            messages: [\r\n                {id: 1, message: \"Hi\"},\r\n                {id: 2, message: \"How is your day?\"},\r\n                {id: 3, message: \"You\"},\r\n                {id: 4, message: \"You\"},\r\n                {id: 5, message: \"You\"},\r\n            ],\r\n            dialogs: [\r\n                {id: 1, name: \"Max\"},\r\n                {id: 2, name: \"Angelika\"},\r\n                {id: 3, name: \"Aneta\"},\r\n                {id: 4, name: \"Zoja\"},\r\n                {id: 5, name: \"Andjei\"},\r\n                {id: 6, name: \"Marysia\"},\r\n            ],\r\n            newMessageText: \"\",\r\n        },\r\n        sidebar: {},\r\n    },\r\n    \"_rerenderEntireTreePererisovka\"() {\r\n        console.log(\"ebobo\")\r\n    },\r\n\r\n    \"getState\"() {\r\n        return this._state;\r\n    },\r\n    \"subscribe\"(observer)  {\r\n        this._rerenderEntireTreePererisovka = observer;\r\n    },\r\n\r\n    \"dispatch\"(action) {\r\n        if (action.type === ADD_POST) {\r\n            let newPost = {\r\n                id: 5,\r\n                message: this._state.profilePage.newPostText,\r\n                like: 0,\r\n            };\r\n            this._state.profilePage.posts.push(newPost);\r\n            this._state.profilePage.newPostText = \"\";\r\n            this._rerenderEntireTreePererisovka(this._state);\r\n        } else if (action.type === UPDATE_NEW_POST_CHANGE) {\r\n            this._state.profilePage.newPostText = action.newText;\r\n            this._rerenderEntireTreePererisovka(this._state);\r\n        } else if (action.type === ADD_MESSAGE) {\r\n            let newMessage = {\r\n                id: 6,\r\n                message: this._state.dialogsPage.newMessageText,\r\n            };\r\n            this._state.dialogsPage.messages.push(newMessage);\r\n            this._state.dialogsPage.newMessageText = \"\";\r\n            this._rerenderEntireTreePererisovka(this._state);\r\n        } else if (action.type === UPDATE_NEW_MESSAGE_CHANGE) {\r\n            this._state.dialogsPage.newMessageText = action.newMessage;\r\n            this._rerenderEntireTreePererisovka(this._state);\r\n        }\r\n    },\r\n}\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\nexport const updateNewPostChangeActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_POST_CHANGE, newText: text})\r\nexport const addMessageActionCreator = () => ({type: ADD_MESSAGE})\r\nexport const updateNewMessageChangeActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_MESSAGE_CHANGE, newMessage: text})\r\n\r\nexport default store;\r\n\r\n// window.store = store;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}