{"ast":null,"code":"const FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nlet initialState = {\n  users: [\n    // {\n    //     id: 1,\n    //     followed: true,\n    //     photoURL: 'https://static.vecteezy.com/system/resources/thumbnails/002/227/847/small/programmer-computer-expert-black-linear-icon-vector.jpg',\n    //     fullName: 'Maxim Yafimchyk',\n    //     status: \"Junior programmer\",\n    //     location:\n    //         {\n    //             city: 'Wroclaw',\n    //             country: 'Poland',\n    //\n    //         },\n    // },\n    // {\n    //     id: 2,\n    //     followed: true,\n    //     photoURL:'https://thumbs.dreamstime.com/b/facial-expression-redhead-woman-smiling-female-emotions-attractive-cartoon-character-vector-illustration-white-background-105899768.jpg',\n    //     fullName: 'Angelika Lema',\n    //     status: \"Redhead girl\",\n    //     location:\n    //         {\n    //             city: 'Wroclaw',\n    //             country: 'Poland',\n    //\n    //         },\n    // },\n    // {\n    //     id: 3,\n    //     followed: false,\n    //     photoURL:'https://i.pinimg.com/originals/eb/42/b3/eb42b30af8dbbee64166eed52e37c87c.png',\n    //     fullName: 'Aneta Snihur',\n    //     status: \"Manchester City Fan №1\",\n    //     location:\n    //         {\n    //             city: 'Wroclaw',\n    //             country: 'Poland',\n    //\n    //         },\n    // },\n  ],\n  pageSize: 100,\n  totalUsersCount: 1,\n  currentPage: 1,\n  isFetching: true\n};\nconst UsersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      {\n        return {\n          ...state,\n          users: state.users.map(user => {\n            if (user.id === action.userID) {\n              return {\n                ...user,\n                followed: true\n              };\n            }\n            return user;\n          })\n        };\n      }\n    case UNFOLLOW:\n      {\n        return {\n          ...state,\n          users: state.users.map(user => {\n            if (user.id === action.userID) {\n              return {\n                ...user,\n                followed: false\n              };\n            }\n            return user;\n          })\n        };\n      }\n    case SET_USERS:\n      {\n        return {\n          ...state,\n          users: action.users\n        };\n      }\n    case SET_CURRENT_PAGE:\n      {\n        return {\n          ...state,\n          currentPage: action.currentPage\n        };\n      }\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return {\n          ...state,\n          totalUsersCount: action.totalUsersCount\n        };\n      }\n    case TOGGLE_IS_FETCHING:\n      {\n        return {\n          ...state,\n          isFetching: action.isFetching\n        };\n      }\n    default:\n      return state;\n  }\n};\n_c = UsersReducer;\nexport const followAC = userID => ({\n  type: FOLLOW,\n  userID\n});\nexport const unfollowAC = userID => ({\n  type: UNFOLLOW,\n  userID\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPageAC = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCountAC = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalUsersCount\n});\nexport const toggleIsFetchingAC = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport default UsersReducer;\nvar _c;\n$RefreshReg$(_c, \"UsersReducer\");","map":{"version":3,"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","UsersReducer","state","action","type","map","user","id","userID","followed","_c","followAC","unfollowAC","setUsersAC","setCurrentPageAC","setTotalUsersCountAC","toggleIsFetchingAC","$RefreshReg$"],"sources":["C:/Users/maksi/Desktop/React/Project/01/my-app/src/Redax/Users-reducer.js"],"sourcesContent":["const FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\n\r\nlet initialState = {\r\n    users: [\r\n        // {\r\n        //     id: 1,\r\n        //     followed: true,\r\n        //     photoURL: 'https://static.vecteezy.com/system/resources/thumbnails/002/227/847/small/programmer-computer-expert-black-linear-icon-vector.jpg',\r\n        //     fullName: 'Maxim Yafimchyk',\r\n        //     status: \"Junior programmer\",\r\n        //     location:\r\n        //         {\r\n        //             city: 'Wroclaw',\r\n        //             country: 'Poland',\r\n        //\r\n        //         },\r\n        // },\r\n        // {\r\n        //     id: 2,\r\n        //     followed: true,\r\n        //     photoURL:'https://thumbs.dreamstime.com/b/facial-expression-redhead-woman-smiling-female-emotions-attractive-cartoon-character-vector-illustration-white-background-105899768.jpg',\r\n        //     fullName: 'Angelika Lema',\r\n        //     status: \"Redhead girl\",\r\n        //     location:\r\n        //         {\r\n        //             city: 'Wroclaw',\r\n        //             country: 'Poland',\r\n        //\r\n        //         },\r\n        // },\r\n        // {\r\n        //     id: 3,\r\n        //     followed: false,\r\n        //     photoURL:'https://i.pinimg.com/originals/eb/42/b3/eb42b30af8dbbee64166eed52e37c87c.png',\r\n        //     fullName: 'Aneta Snihur',\r\n        //     status: \"Manchester City Fan №1\",\r\n        //     location:\r\n        //         {\r\n        //             city: 'Wroclaw',\r\n        //             country: 'Poland',\r\n        //\r\n        //         },\r\n        // },\r\n    ],\r\n    pageSize: 100,\r\n    totalUsersCount: 1,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n}\r\n\r\nconst UsersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userID) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userID) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user;\r\n                })\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followAC = (userID) => ({type: FOLLOW, userID});\r\nexport const unfollowAC = (userID) => ({type: UNFOLLOW, userID})\r\nexport const setUsersAC = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPageAC = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCountAC = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount})\r\nexport const toggleIsFetchingAC = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\n\r\n\r\n\r\nexport default UsersReducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}