{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maksi\\\\Desktop\\\\React\\\\Project\\\\01\\\\my-app\\\\src\\\\components\\\\Profile\\\\MyPosts\\\\MyPosts.jsx\";\nimport React from 'react';\nimport s from './MyPosts.module.css';\nimport AddPost from \"./AddPost/AddPost\";\nimport PostForm from \"./PostForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPosts = props => {\n  let postsElement = props.posts.map(p => /*#__PURE__*/_jsxDEV(AddPost, {\n    message: p.message,\n    like: p.like\n  }, p.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 47\n  }, this));\n  let newPostElement = /*#__PURE__*/React.createRef();\n  let onAddPost = () => {\n    props.addPost();\n  };\n  let onPostChange = () => {\n    let text = newPostElement.current.value;\n    props.updateNewPostChange(text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.postBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \" My post \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: onPostChange,\n          ref: newPostElement,\n          value: props.newPostText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onAddPost,\n          children: \"Add post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.posts,\n      children: postsElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_c = MyPosts;\nconst postForm = props => {};\nexport default MyPosts;\n\n// Старый и новый код для форм\n// <h3> My post </h3>\n// <div>\n//     <div>\n//                     <textarea onChange={onPostChange}\n//                               ref={newPostElement}\n//                               value={props.newPostText}/>\n//     </div>\n//     <div>\n//         <button onClick={onAddPost}>Add post</button>\n//         <button>Remove</button>\n//     </div>\n// </div>\n//\n// <PostForm onAddPost={onAddPost}\n//       onPostChange={onPostChange}\n//       newPostText={props.newPostText}\n//       newPostElement={newPostElement}\n// />\nvar _c;\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"names":["React","s","AddPost","PostForm","jsxDEV","_jsxDEV","MyPosts","props","postsElement","posts","map","p","message","like","id","fileName","_jsxFileName","lineNumber","columnNumber","newPostElement","createRef","onAddPost","addPost","onPostChange","text","current","value","updateNewPostChange","className","postBlock","children","onChange","ref","newPostText","onClick","_c","postForm","$RefreshReg$"],"sources":["C:/Users/maksi/Desktop/React/Project/01/my-app/src/components/Profile/MyPosts/MyPosts.jsx"],"sourcesContent":["import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport AddPost from \"./AddPost/AddPost\";\r\nimport PostForm from \"./PostForm\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElement = props.posts.map((p) => <AddPost message={p.message} like={p.like} key={p.id}/>)\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    };\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostChange(text);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <h3> My post </h3>\r\n            <form>\r\n                <div>\r\n                    <textarea onChange={onPostChange}\r\n                              ref={newPostElement}\r\n                              value={props.newPostText}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddPost}>Add post</button>\r\n                    <button>Remove</button>\r\n                </div>\r\n            </form>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst postForm = (props) => {\r\n    \r\n}\r\n\r\n\r\nexport default MyPosts;\r\n\r\n// Старый и новый код для форм\r\n// <h3> My post </h3>\r\n// <div>\r\n//     <div>\r\n//                     <textarea onChange={onPostChange}\r\n//                               ref={newPostElement}\r\n//                               value={props.newPostText}/>\r\n//     </div>\r\n//     <div>\r\n//         <button onClick={onAddPost}>Add post</button>\r\n//         <button>Remove</button>\r\n//     </div>\r\n// </div>\r\n//\r\n// <PostForm onAddPost={onAddPost}\r\n//       onPostChange={onPostChange}\r\n//       newPostText={props.newPostText}\r\n//       newPostElement={newPostElement}\r\n// />\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,sBAAsB;AACpC,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,OAAO,GAAIC,KAAK,IAAK;EACvB,IAAIC,YAAY,GAAGD,KAAK,CAACE,KAAK,CAACC,GAAG,CAAEC,CAAC,iBAAKN,OAAA,CAACH,OAAO;IAACU,OAAO,EAAED,CAAC,CAACC,OAAQ;IAACC,IAAI,EAAEF,CAAC,CAACE;EAAK,GAAMF,CAAC,CAACG,EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC;EAElG,IAAIC,cAAc,gBAAGnB,KAAK,CAACoB,SAAS,CAAC,CAAC;EAEtC,IAAIC,SAAS,GAAGA,CAAA,KAAM;IAClBd,KAAK,CAACe,OAAO,CAAC,CAAC;EACnB,CAAC;EAED,IAAIC,YAAY,GAAGA,CAAA,KAAM;IACrB,IAAIC,IAAI,GAAGL,cAAc,CAACM,OAAO,CAACC,KAAK;IACvCnB,KAAK,CAACoB,mBAAmB,CAACH,IAAI,CAAC;EACnC,CAAC;EAID,oBACInB,OAAA;IAAKuB,SAAS,EAAE3B,CAAC,CAAC4B,SAAU;IAAAC,QAAA,gBACxBzB,OAAA;MAAAyB,QAAA,EAAI;IAAS;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBb,OAAA;MAAAyB,QAAA,gBACIzB,OAAA;QAAAyB,QAAA,eACIzB,OAAA;UAAU0B,QAAQ,EAAER,YAAa;UACvBS,GAAG,EAAEb,cAAe;UACpBO,KAAK,EAAEnB,KAAK,CAAC0B;QAAY;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACNb,OAAA;QAAAyB,QAAA,gBACIzB,OAAA;UAAQ6B,OAAO,EAAEb,SAAU;UAAAS,QAAA,EAAC;QAAQ;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC7Cb,OAAA;UAAAyB,QAAA,EAAQ;QAAM;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACPb,OAAA;MAAKuB,SAAS,EAAE3B,CAAC,CAACQ,KAAM;MAAAqB,QAAA,EACnBtB;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAiB,EAAA,GAnCK7B,OAAO;AAqCb,MAAM8B,QAAQ,GAAI7B,KAAK,IAAK,CAE5B,CAAC;AAGD,eAAeD,OAAO;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAA6B,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}