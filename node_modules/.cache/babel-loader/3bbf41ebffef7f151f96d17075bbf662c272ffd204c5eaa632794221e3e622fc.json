{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maksi\\\\Desktop\\\\React\\\\Project\\\\01\\\\my-app\\\\src\\\\components\\\\Users\\\\UsersContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { followAC, setCurrentPageAC, setTotalUsersCountAC, setUsersAC, unfollowAC } from \"../../Redax/Users-reducer\";\nimport axios from \"axios\";\nimport Users from \"./Users\";\nimport LoadingGif from \"../../asets/images/Loadibg-gif.gif\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n  componentDidMount() {\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: LoadingGif\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 42\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        users: this.props.users,\n        onPageChanged: this.onPageChanged,\n        unfollow: this.props.unfollow,\n        follow: this.props.follow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    follow: userID => {\n      dispatch(followAC(userID));\n    },\n    unfollow: userID => {\n      dispatch(unfollowAC(userID));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: currentPage => {\n      dispatch(setCurrentPageAC(currentPage));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setTotalUsersCountAC(totalCount));\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"names":["React","connect","followAC","setCurrentPageAC","setTotalUsersCountAC","setUsersAC","unfollowAC","axios","Users","LoadingGif","jsxDEV","_jsxDEV","Fragment","_Fragment","UsersContainer","Component","constructor","args","onPageChanged","pageNumber","props","setCurrentPage","get","pageSize","then","response","setUsers","data","items","componentDidMount","currentPage","setTotalUsersCount","totalCount","render","children","isFetching","src","fileName","_jsxFileName","lineNumber","columnNumber","totalUsersCount","users","unfollow","follow","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userID"],"sources":["C:/Users/maksi/Desktop/React/Project/01/my-app/src/components/Users/UsersContainer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {followAC, setCurrentPageAC, setTotalUsersCountAC, setUsersAC, unfollowAC} from \"../../Redax/Users-reducer\";\r\nimport axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport LoadingGif from \"../../asets/images/Loadibg-gif.gif\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.setUsers(response.data.items)\r\n                this.props.setTotalUsersCount(response.data.totalCount)\r\n\r\n            });\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n            .then(response => {\r\n                this.props.setUsers(response.data.items)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n                {this.props.isFetching ? <img src={LoadingGif}/> : null}\r\n                <Users totalUsersCount={this.props.totalUsersCount}\r\n                       pageSize={this.props.pageSize}\r\n                       currentPage={this.props.currentPage}\r\n                       users={this.props.users}\r\n                       onPageChanged={this.onPageChanged}\r\n                       unfollow={this.props.unfollow}\r\n                       follow={this.props.follow}\r\n\r\n\r\n                />\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userID) => {\r\n            dispatch(followAC(userID))\r\n        },\r\n        unfollow: (userID) => {\r\n            dispatch(unfollowAC(userID))\r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (currentPage) => {\r\n            dispatch(setCurrentPageAC(currentPage))\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setTotalUsersCountAC(totalCount))\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}