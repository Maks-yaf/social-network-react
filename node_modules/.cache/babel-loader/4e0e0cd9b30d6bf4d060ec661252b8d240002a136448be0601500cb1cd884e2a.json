{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maksi\\\\Desktop\\\\React\\\\Project\\\\01\\\\my-app\\\\src\\\\components\\\\Dialogs\\\\DialogsContainer.jsx\";\nimport React from 'react';\nimport { addMessageActionCreator, updateNewMessageChangeActionCreator } from \"../../Redax/Dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport StoreContext from \"../../StoreContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DialogsContainer = props => {\n  let state = props.store.getState().dialogsPage;\n  let addMessage = () => {\n    props.store.dispatch(addMessageActionCreator());\n  };\n  let onMassageChange = text => {\n    let action = updateNewMessageChangeActionCreator(text);\n    props.store.dispatch(action);\n  };\n  return /*#__PURE__*/_jsxDEV(StoreContext.Consumer, {\n    children: /*#__PURE__*/_jsxDEV(Dialogs, {\n      addMessage: addMessage,\n      updateNewMessageChange: onMassageChange,\n      newMessageText: state.newMessageText,\n      dialogs: state.dialogs,\n      messages: state.messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_c = DialogsContainer;\nexport default DialogsContainer;\nvar _c;\n$RefreshReg$(_c, \"DialogsContainer\");","map":{"version":3,"names":["React","addMessageActionCreator","updateNewMessageChangeActionCreator","Dialogs","StoreContext","jsxDEV","_jsxDEV","DialogsContainer","props","state","store","getState","dialogsPage","addMessage","dispatch","onMassageChange","text","action","Consumer","children","updateNewMessageChange","newMessageText","dialogs","messages","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/maksi/Desktop/React/Project/01/my-app/src/components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from 'react';\r\nimport {addMessageActionCreator, updateNewMessageChangeActionCreator} from \"../../Redax/Dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport StoreContext from \"../../StoreContext\";\r\n\r\nconst DialogsContainer = (props) => {\r\n\r\n    let state = props.store.getState().dialogsPage;\r\n\r\n    let addMessage = () => {\r\n        props.store.dispatch(addMessageActionCreator());\r\n    };\r\n\r\n    let onMassageChange = (text) => {\r\n        let action = updateNewMessageChangeActionCreator(text);\r\n        props.store.dispatch(action);\r\n    };\r\n\r\n    return (\r\n        <StoreContext.Consumer>\r\n        <Dialogs\r\n            addMessage={addMessage}\r\n            updateNewMessageChange = {onMassageChange}\r\n            newMessageText = {state.newMessageText}\r\n            dialogs = {state.dialogs}\r\n            messages = {state.messages}/>\r\n            </StoreContext.Consumer>\r\n    )\r\n};\r\n\r\nexport default DialogsContainer;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,uBAAuB,EAAEC,mCAAmC,QAAO,6BAA6B;AACxG,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,YAAY,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EAEhC,IAAIC,KAAK,GAAGD,KAAK,CAACE,KAAK,CAACC,QAAQ,CAAC,CAAC,CAACC,WAAW;EAE9C,IAAIC,UAAU,GAAGA,CAAA,KAAM;IACnBL,KAAK,CAACE,KAAK,CAACI,QAAQ,CAACb,uBAAuB,CAAC,CAAC,CAAC;EACnD,CAAC;EAED,IAAIc,eAAe,GAAIC,IAAI,IAAK;IAC5B,IAAIC,MAAM,GAAGf,mCAAmC,CAACc,IAAI,CAAC;IACtDR,KAAK,CAACE,KAAK,CAACI,QAAQ,CAACG,MAAM,CAAC;EAChC,CAAC;EAED,oBACIX,OAAA,CAACF,YAAY,CAACc,QAAQ;IAAAC,QAAA,eACtBb,OAAA,CAACH,OAAO;MACJU,UAAU,EAAEA,UAAW;MACvBO,sBAAsB,EAAIL,eAAgB;MAC1CM,cAAc,EAAIZ,KAAK,CAACY,cAAe;MACvCC,OAAO,EAAIb,KAAK,CAACa,OAAQ;MACzBC,QAAQ,EAAId,KAAK,CAACc;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEpC,CAAC;AAACC,EAAA,GAvBIrB,gBAAgB;AAyBtB,eAAeA,gBAAgB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}