{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maksi\\\\Desktop\\\\React\\\\Project\\\\01\\\\my-app\\\\src\\\\components\\\\Profile\\\\MyPosts\\\\MyPosts.jsx\";\nimport React from 'react';\nimport s from './MyPosts.module.css';\nimport AddPost from \"./AddPost/AddPost\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../../../Utils/Validators/validators\";\nimport { Textarea } from \"../../Common/FormsControls/FormsControls\";\nimport * as console from \"node:console\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MyPosts extends React.Component {\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    return false;\n  }\n  render() {\n    console.log(\"Render\");\n    let postsElement = this.props.posts.map(p => /*#__PURE__*/_jsxDEV(AddPost, {\n      message: p.message,\n      like: p.like\n    }, p.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 56\n    }, this));\n    let onAddPost = values => {\n      this.props.addPost(values.postTextArea);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.postBlock,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" My post \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostFormRedux, {\n        onSubmit: onAddPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.posts,\n        children: postsElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst PostForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        name: 'postTextArea',\n        component: Textarea,\n        placeholder: \"Hi, how are you\",\n        validate: [required, maxLengthCreator(10)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_c = PostForm;\nconst PostFormRedux = reduxForm({\n  form: \"post\"\n})(PostForm);\n_c2 = PostFormRedux;\nexport default MyPosts;\n\n// Старый и новый код для форм\n// <h3> My post </h3>\n// <div>\n//     <div>\n//                     <textarea onChange={onPostChange}\n//                               ref={newPostElement}\n//                               value={props.newPostText}/>\n//     </div>\n//     <div>\n//         <button onClick={onAddPost}>Add post</button>\n//         <button>Remove</button>\n//     </div>\n// </div>\n//\n// <PostForm onAddPost={onAddPost}\n//       onPostChange={onPostChange}\n//       newPostText={props.newPostText}\n//       newPostElement={newPostElement}\n// />\nvar _c, _c2;\n$RefreshReg$(_c, \"PostForm\");\n$RefreshReg$(_c2, \"PostFormRedux\");","map":{"version":3,"names":["React","s","AddPost","Field","reduxForm","maxLengthCreator","required","Textarea","console","jsxDEV","_jsxDEV","MyPosts","Component","shouldComponentUpdate","nextProps","nextState","nextContext","render","log","postsElement","props","posts","map","p","message","like","id","fileName","_jsxFileName","lineNumber","columnNumber","onAddPost","values","addPost","postTextArea","className","postBlock","children","PostFormRedux","onSubmit","PostForm","handleSubmit","name","component","placeholder","validate","type","_c","form","_c2","$RefreshReg$"],"sources":["C:/Users/maksi/Desktop/React/Project/01/my-app/src/components/Profile/MyPosts/MyPosts.jsx"],"sourcesContent":["import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport AddPost from \"./AddPost/AddPost\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../Utils/Validators/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport * as console from \"node:console\";\r\n\r\nclass MyPosts extends React.Component {\r\n\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        console.log(\"Render\");\r\n        let postsElement = this.props.posts.map((p) => <AddPost message={p.message} like={p.like} key={p.id}/>)\r\n\r\n        let onAddPost = (values) => {\r\n            this.props.addPost(values.postTextArea);\r\n        };\r\n\r\n        return (\r\n            <div className={s.postBlock}>\r\n                <h3> My post </h3>\r\n                <PostFormRedux onSubmit={onAddPost}/>\r\n                <div className={s.posts}>\r\n                    {postsElement}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst PostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'postTextArea'}\r\n                       component={Textarea}\r\n                       placeholder={\"Hi, how are you\"}\r\n                       validate={[required, maxLengthCreator(10)]}/>\r\n            </div>\r\n            <div>\r\n                <button type='submit'>Add post</button>\r\n                <button type='submit'>Remove</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst PostFormRedux = reduxForm({form: \"post\"})(PostForm)\r\n\r\nexport default MyPosts;\r\n\r\n// Старый и новый код для форм\r\n// <h3> My post </h3>\r\n// <div>\r\n//     <div>\r\n//                     <textarea onChange={onPostChange}\r\n//                               ref={newPostElement}\r\n//                               value={props.newPostText}/>\r\n//     </div>\r\n//     <div>\r\n//         <button onClick={onAddPost}>Add post</button>\r\n//         <button>Remove</button>\r\n//     </div>\r\n// </div>\r\n//\r\n// <PostForm onAddPost={onAddPost}\r\n//       onPostChange={onPostChange}\r\n//       newPostText={props.newPostText}\r\n//       newPostElement={newPostElement}\r\n// />\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}