{"ast":null,"code":"import { usersAPI } from \"../API/Api\";\nconst ADD_POST = 'ADD_POST';\nconst UPDATE_NEW_POST_CHANGE = 'UPDATE_NEW_POST_CHANGE';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_USER_FULLNAME = 'SET_USER_FULLNAME';\nconst SET_USER_DESCRIPTION = 'SET_USER_DESCRIPTION';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: \"Hi, How are you\",\n    like: 15\n  }, {\n    id: 2,\n    message: \"Hi, it's my first post\",\n    like: 10\n  }, {\n    id: 3,\n    message: \"412412\",\n    like: 123\n  }, {\n    id: 4,\n    message: \"ohohohooh\",\n    like: 1123\n  }],\n  newPostText: \"Hi, How are you\",\n  profile: null,\n  fullName: \"FullName\",\n  description: \"Description\",\n  status: \"Обновите ваш статус\"\n};\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 5,\n          message: state.newPostText,\n          like: 0\n        };\n        return {\n          ...state,\n          newPostText: \"\",\n          posts: [...state.posts, newPost]\n        };\n      }\n    case UPDATE_NEW_POST_CHANGE:\n      {\n        return {\n          ...state,\n          newPostText: action.newText\n        };\n      }\n    case SET_USER_PROFILE:\n      {\n        return {\n          ...state,\n          profile: action.profile\n        };\n      }\n    case SET_USER_FULLNAME:\n      {\n        return {\n          ...state,\n          fullName: action.fullName\n        };\n      }\n    case SET_USER_DESCRIPTION:\n      {\n        return {\n          ...state,\n          description: action.description\n        };\n      }\n    default:\n      return state;\n  }\n};\n\n///ActionCreator\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostChangeActionCreator = text => ({\n  type: UPDATE_NEW_POST_CHANGE,\n  newText: text\n});\nconst setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nconst setUserFullName = fullName => ({\n  type: SET_USER_FULLNAME,\n  fullName\n});\nconst setUserDescription = description => ({\n  type: SET_USER_DESCRIPTION,\n  description\n});\n\n///ThunkCreator\nexport const profileInfo = userID => {\n  return dispatch => {\n    usersAPI.getProfileInfo(userID).then(data => {\n      dispatch(setUserProfile(data));\n      dispatch(setUserFullName(data.fullName));\n      dispatch(setUserDescription(data.aboutMe));\n    });\n  };\n};\nexport default profileReducer;\n\n/// useEffect(() => {\n//     axios\n//         .get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\n//         .then((response) => {\n//             props.setUserProfile(response.data)\n//             props.setUserFullName(response.data.fullName)\n//             props.setUserDescription(response.data.aboutMe)\n//         });\n// }, [userId]);","map":{"version":3,"names":["usersAPI","ADD_POST","UPDATE_NEW_POST_CHANGE","SET_USER_PROFILE","SET_USER_FULLNAME","SET_USER_DESCRIPTION","initialState","posts","id","message","like","newPostText","profile","fullName","description","status","profileReducer","state","action","type","newPost","newText","addPostActionCreator","updateNewPostChangeActionCreator","text","setUserProfile","setUserFullName","setUserDescription","profileInfo","userID","dispatch","getProfileInfo","then","data","aboutMe"],"sources":["C:/Users/maksi/Desktop/React/Project/01/my-app/src/Redax/Profile-reducer.js"],"sourcesContent":["import {usersAPI} from \"../API/Api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst UPDATE_NEW_POST_CHANGE = 'UPDATE_NEW_POST_CHANGE';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_FULLNAME='SET_USER_FULLNAME';\r\nconst SET_USER_DESCRIPTION='SET_USER_DESCRIPTION';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi, How are you\", like: 15},\r\n        {id: 2, message: \"Hi, it's my first post\", like: 10},\r\n        {id: 3, message: \"412412\", like: 123},\r\n        {id: 4, message: \"ohohohooh\", like: 1123},\r\n    ],\r\n    newPostText: \"Hi, How are you\",\r\n    profile: null,\r\n    fullName: \"FullName\",\r\n    description: \"Description\",\r\n    status: \"Обновите ваш статус\"\r\n\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                like: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                newPostText: \"\",\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        }\r\n        case UPDATE_NEW_POST_CHANGE: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText,\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            };\r\n        }\r\n        case SET_USER_FULLNAME: {\r\n            return {\r\n                ...state,\r\n                fullName: action.fullName,\r\n            };\r\n        }\r\n        case SET_USER_DESCRIPTION: {\r\n            return {\r\n                ...state,\r\n                description: action.description,\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n///ActionCreator\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\nexport const updateNewPostChangeActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_POST_CHANGE, newText: text})\r\nconst  setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nconst  setUserFullName = (fullName) => ({type: SET_USER_FULLNAME, fullName})\r\nconst setUserDescription = (description) => ({type: SET_USER_DESCRIPTION, description})\r\n\r\n///ThunkCreator\r\nexport const profileInfo = (userID) => {\r\n    return (dispatch) => {\r\n        usersAPI.getProfileInfo(userID)\r\n            .then(data => {\r\n                dispatch(setUserProfile(data))\r\n                dispatch(setUserFullName(data.fullName))\r\n                dispatch(setUserDescription(data.aboutMe))\r\n            });\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\n/// useEffect(() => {\r\n//     axios\r\n//         .get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\r\n//         .then((response) => {\r\n//             props.setUserProfile(response.data)\r\n//             props.setUserFullName(response.data.fullName)\r\n//             props.setUserDescription(response.data.aboutMe)\r\n//         });\r\n// }, [userId]);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}