{"ast":null,"code":"import { profileAPI, usersAPI } from \"../API/Api\";\nconst ADD_POST = 'ADD_POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_USER_FULLNAME = 'SET_USER_FULLNAME';\nconst SET_USER_DESCRIPTION = 'SET_USER_DESCRIPTION';\nconst SET_USER_STATUS = 'SET_USER_STATUS';\nconst SET_USER_PHOTO = 'SET_USER_PHOTO';\nconst DELETE_POST = 'DELETE_POST';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: \"Hi, How are you\",\n    like: 15\n  }, {\n    id: 2,\n    message: \"Hi, it's my first post\",\n    like: 10\n  }, {\n    id: 3,\n    message: \"412412\",\n    like: 123\n  }, {\n    id: 4,\n    message: \"ohohohooh\",\n    like: 1123\n  }],\n  profile: null,\n  fullName: \"FullName\",\n  description: \"Description\",\n  status: \"Условная пустота\",\n  photo: \"Заглушка фото\"\n};\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let newPost = {\n          id: 5,\n          message: action.postTextArea,\n          like: 0\n        };\n        return {\n          ...state,\n          posts: [...state.posts, newPost]\n        };\n      }\n    case DELETE_POST:\n      {\n        return {\n          ...state,\n          posts: state.posts.filter(post => post.id !== action.postId)\n        };\n      }\n    case SET_USER_PROFILE:\n      {\n        return {\n          ...state,\n          profile: action.profile\n        };\n      }\n    case SET_USER_FULLNAME:\n      {\n        return {\n          ...state,\n          fullName: action.fullName\n        };\n      }\n    case SET_USER_DESCRIPTION:\n      {\n        return {\n          ...state,\n          description: action.description\n        };\n      }\n    case SET_USER_STATUS:\n      {\n        return {\n          ...state,\n          status: action.status\n        };\n      }\n    case SET_USER_PHOTO:\n      {\n        return {\n          ...state,\n          photo: action.photo\n        };\n      }\n    default:\n      return state;\n  }\n};\n\n///ActionCreator\nexport const addPostActionCreator = postTextArea => ({\n  type: ADD_POST,\n  postTextArea\n});\nconst setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nconst setUserFullName = fullName => ({\n  type: SET_USER_FULLNAME,\n  fullName\n});\nconst setUserDescription = description => ({\n  type: SET_USER_DESCRIPTION,\n  description\n});\nconst setUserStatus = status => ({\n  type: SET_USER_STATUS,\n  status\n});\nconst setUserPhoto = photo => ({\n  type: SET_USER_PHOTO,\n  photo\n});\nexport const deletePost = postId => ({\n  type: DELETE_POST,\n  postId\n});\n\n///ThunkCreator\nexport const profileInfo = userID => {\n  return dispatch => {\n    usersAPI.getProfileInfo(userID).then(data => {\n      dispatch(setUserProfile(data));\n      dispatch(setUserFullName(data.fullName));\n      dispatch(setUserDescription(data.aboutMe));\n    });\n  };\n};\nexport const getStatus = userId => {\n  return dispatch => {\n    profileAPI.getStatus(userId).then(data => {\n      dispatch(setUserStatus(data));\n    });\n  };\n};\nexport const updateStatus = status => {\n  return dispatch => {\n    profileAPI.updateStatus(status).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(setUserStatus(status));\n      }\n    });\n  };\n};\nexport const updatePhoto = photo => {\n  return dispatch => {\n    profileAPI.updatePhoto(photo).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(setUserPhoto(photo));\n      }\n    });\n  };\n};\nexport default profileReducer;\n\n/// useEffect(() => {\n//     axios\n//         .get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\n//         .then((response) => {\n//             props.setUserProfile(response.data)\n//             props.setUserFullName(response.data.fullName)\n//             props.setUserDescription(response.data.aboutMe)\n//         });\n// }, [userId]);","map":{"version":3,"names":["profileAPI","usersAPI","ADD_POST","SET_USER_PROFILE","SET_USER_FULLNAME","SET_USER_DESCRIPTION","SET_USER_STATUS","SET_USER_PHOTO","DELETE_POST","initialState","posts","id","message","like","profile","fullName","description","status","photo","profileReducer","state","action","type","newPost","postTextArea","filter","post","postId","addPostActionCreator","setUserProfile","setUserFullName","setUserDescription","setUserStatus","setUserPhoto","deletePost","profileInfo","userID","dispatch","getProfileInfo","then","data","aboutMe","getStatus","userId","updateStatus","resultCode","updatePhoto"],"sources":["C:/Users/maksi/Desktop/git/social-network-react/my-app/src/Redax/Profile-reducer.js"],"sourcesContent":["import {profileAPI, usersAPI} from \"../API/Api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_FULLNAME='SET_USER_FULLNAME';\r\nconst SET_USER_DESCRIPTION='SET_USER_DESCRIPTION';\r\nconst SET_USER_STATUS='SET_USER_STATUS';\r\nconst SET_USER_PHOTO='SET_USER_PHOTO';\r\nconst DELETE_POST='DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi, How are you\", like: 15},\r\n        {id: 2, message: \"Hi, it's my first post\", like: 10},\r\n        {id: 3, message: \"412412\", like: 123},\r\n        {id: 4, message: \"ohohohooh\", like: 1123},\r\n    ],\r\n    profile: null,\r\n    fullName: \"FullName\",\r\n    description: \"Description\",\r\n    status: \"Условная пустота\",\r\n    photo: \"Заглушка фото\",\r\n\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.postTextArea,\r\n                like: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post.id !== action.postId),\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            };\r\n        }\r\n        case SET_USER_FULLNAME: {\r\n            return {\r\n                ...state,\r\n                fullName: action.fullName,\r\n            };\r\n        }\r\n        case SET_USER_DESCRIPTION: {\r\n            return {\r\n                ...state,\r\n                description: action.description,\r\n            };\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        }\r\n        case SET_USER_PHOTO: {\r\n            return {\r\n                ...state,\r\n                photo: action.photo,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n///ActionCreator\r\nexport const addPostActionCreator = (postTextArea) => ({type: ADD_POST, postTextArea})\r\nconst  setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nconst  setUserFullName = (fullName) => ({type: SET_USER_FULLNAME, fullName})\r\nconst setUserDescription = (description) => ({type: SET_USER_DESCRIPTION, description})\r\nconst setUserStatus = (status) => ({type: SET_USER_STATUS, status})\r\nconst setUserPhoto = (photo) => ({type: SET_USER_PHOTO, photo})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\n\r\n///ThunkCreator\r\nexport const profileInfo = (userID) => {\r\n    return (dispatch) => {\r\n        usersAPI.getProfileInfo(userID)\r\n            .then(data => {\r\n                dispatch(setUserProfile(data))\r\n                dispatch(setUserFullName(data.fullName))\r\n                dispatch(setUserDescription(data.aboutMe))\r\n            });\r\n    }\r\n}\r\nexport const getStatus = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId)\r\n            .then(data => {\r\n                dispatch(setUserStatus(data))\r\n            });\r\n    }\r\n}\r\nexport const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateStatus(status)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setUserStatus(status))\r\n                }\r\n            });\r\n    }\r\n}\r\nexport const updatePhoto = (photo) => {\r\n    return (dispatch) => {\r\n        profileAPI.updatePhoto(photo)\r\n            .then(data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setUserPhoto(photo))\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default profileReducer;\r\n\r\n/// useEffect(() => {\r\n//     axios\r\n//         .get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\r\n//         .then((response) => {\r\n//             props.setUserProfile(response.data)\r\n//             props.setUserFullName(response.data.fullName)\r\n//             props.setUserDescription(response.data.aboutMe)\r\n//         });\r\n// }, [userId]);"],"mappings":"AAAA,SAAQA,UAAU,EAAEC,QAAQ,QAAO,YAAY;AAE/C,MAAMC,QAAQ,GAAG,UAAU;AAC3B,MAAMC,gBAAgB,GAAG,kBAAkB;AAC3C,MAAMC,iBAAiB,GAAC,mBAAmB;AAC3C,MAAMC,oBAAoB,GAAC,sBAAsB;AACjD,MAAMC,eAAe,GAAC,iBAAiB;AACvC,MAAMC,cAAc,GAAC,gBAAgB;AACrC,MAAMC,WAAW,GAAC,aAAa;AAE/B,IAAIC,YAAY,GAAG;EACfC,KAAK,EAAE,CACH;IAACC,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAE,iBAAiB;IAAEC,IAAI,EAAE;EAAE,CAAC,EAC7C;IAACF,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAE,wBAAwB;IAAEC,IAAI,EAAE;EAAE,CAAC,EACpD;IAACF,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAG,CAAC,EACrC;IAACF,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAI,CAAC,CAC5C;EACDC,OAAO,EAAE,IAAI;EACbC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,aAAa;EAC1BC,MAAM,EAAE,kBAAkB;EAC1BC,KAAK,EAAE;AAEX,CAAC;AAED,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGX,YAAY,EAAEY,MAAM,KAAK;EACrD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKpB,QAAQ;MAAE;QACX,IAAIqB,OAAO,GAAG;UACVZ,EAAE,EAAE,CAAC;UACLC,OAAO,EAAES,MAAM,CAACG,YAAY;UAC5BX,IAAI,EAAE;QACV,CAAC;QACD,OAAO;UACH,GAAGO,KAAK;UACRV,KAAK,EAAE,CAAC,GAAGU,KAAK,CAACV,KAAK,EAAEa,OAAO;QACnC,CAAC;MACL;IACA,KAAKf,WAAW;MAAE;QACd,OAAO;UACH,GAAGY,KAAK;UACRV,KAAK,EAAEU,KAAK,CAACV,KAAK,CAACe,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACf,EAAE,KAAKU,MAAM,CAACM,MAAM;QAC/D,CAAC;MACL;IACA,KAAKxB,gBAAgB;MAAE;QACnB,OAAO;UACH,GAAGiB,KAAK;UACRN,OAAO,EAAEO,MAAM,CAACP;QACpB,CAAC;MACL;IACA,KAAKV,iBAAiB;MAAE;QACpB,OAAO;UACH,GAAGgB,KAAK;UACRL,QAAQ,EAAEM,MAAM,CAACN;QACrB,CAAC;MACL;IACA,KAAKV,oBAAoB;MAAE;QACvB,OAAO;UACH,GAAGe,KAAK;UACRJ,WAAW,EAAEK,MAAM,CAACL;QACxB,CAAC;MACL;IACA,KAAKV,eAAe;MAAE;QAClB,OAAO;UACH,GAAGc,KAAK;UACRH,MAAM,EAAEI,MAAM,CAACJ;QACnB,CAAC;MACL;IACA,KAAKV,cAAc;MAAE;QACjB,OAAO;UACH,GAAGa,KAAK;UACRF,KAAK,EAAEG,MAAM,CAACH;QAClB,CAAC;MACL;IACA;MACI,OAAOE,KAAK;EACpB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMQ,oBAAoB,GAAIJ,YAAY,KAAM;EAACF,IAAI,EAAEpB,QAAQ;EAAEsB;AAAY,CAAC,CAAC;AACtF,MAAOK,cAAc,GAAIf,OAAO,KAAM;EAACQ,IAAI,EAAEnB,gBAAgB;EAAEW;AAAO,CAAC,CAAC;AACxE,MAAOgB,eAAe,GAAIf,QAAQ,KAAM;EAACO,IAAI,EAAElB,iBAAiB;EAAEW;AAAQ,CAAC,CAAC;AAC5E,MAAMgB,kBAAkB,GAAIf,WAAW,KAAM;EAACM,IAAI,EAAEjB,oBAAoB;EAAEW;AAAW,CAAC,CAAC;AACvF,MAAMgB,aAAa,GAAIf,MAAM,KAAM;EAACK,IAAI,EAAEhB,eAAe;EAAEW;AAAM,CAAC,CAAC;AACnE,MAAMgB,YAAY,GAAIf,KAAK,KAAM;EAACI,IAAI,EAAEf,cAAc;EAAEW;AAAK,CAAC,CAAC;AAC/D,OAAO,MAAMgB,UAAU,GAAIP,MAAM,KAAM;EAACL,IAAI,EAAEd,WAAW;EAAEmB;AAAM,CAAC,CAAC;;AAGnE;AACA,OAAO,MAAMQ,WAAW,GAAIC,MAAM,IAAK;EACnC,OAAQC,QAAQ,IAAK;IACjBpC,QAAQ,CAACqC,cAAc,CAACF,MAAM,CAAC,CAC1BG,IAAI,CAACC,IAAI,IAAI;MACVH,QAAQ,CAACR,cAAc,CAACW,IAAI,CAAC,CAAC;MAC9BH,QAAQ,CAACP,eAAe,CAACU,IAAI,CAACzB,QAAQ,CAAC,CAAC;MACxCsB,QAAQ,CAACN,kBAAkB,CAACS,IAAI,CAACC,OAAO,CAAC,CAAC;IAC9C,CAAC,CAAC;EACV,CAAC;AACL,CAAC;AACD,OAAO,MAAMC,SAAS,GAAIC,MAAM,IAAK;EACjC,OAAQN,QAAQ,IAAK;IACjBrC,UAAU,CAAC0C,SAAS,CAACC,MAAM,CAAC,CACvBJ,IAAI,CAACC,IAAI,IAAI;MACVH,QAAQ,CAACL,aAAa,CAACQ,IAAI,CAAC,CAAC;IACjC,CAAC,CAAC;EACV,CAAC;AACL,CAAC;AACD,OAAO,MAAMI,YAAY,GAAI3B,MAAM,IAAK;EACpC,OAAQoB,QAAQ,IAAK;IACjBrC,UAAU,CAAC4C,YAAY,CAAC3B,MAAM,CAAC,CAC1BsB,IAAI,CAACC,IAAI,IAAI;MACV,IAAIA,IAAI,CAACK,UAAU,KAAK,CAAC,EAAE;QACvBR,QAAQ,CAACL,aAAa,CAACf,MAAM,CAAC,CAAC;MACnC;IACJ,CAAC,CAAC;EACV,CAAC;AACL,CAAC;AACD,OAAO,MAAM6B,WAAW,GAAI5B,KAAK,IAAK;EAClC,OAAQmB,QAAQ,IAAK;IACjBrC,UAAU,CAAC8C,WAAW,CAAC5B,KAAK,CAAC,CACxBqB,IAAI,CAACC,IAAI,IAAI;MACV,IAAIA,IAAI,CAACK,UAAU,KAAK,CAAC,EAAE;QACvBR,QAAQ,CAACJ,YAAY,CAACf,KAAK,CAAC,CAAC;MACjC;IACJ,CAAC,CAAC;EACV,CAAC;AACL,CAAC;AAID,eAAeC,cAAc;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}