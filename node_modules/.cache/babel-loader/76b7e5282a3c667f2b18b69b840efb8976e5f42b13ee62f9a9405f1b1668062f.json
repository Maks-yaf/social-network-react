{"ast":null,"code":"import React from 'react';\nimport { addMessageActionCreator, updateNewMessageChangeActionCreator } from \"../../Redax/Dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { withAuthNavigate } from \"../../HOC/withAuthNavigate\";\nlet AutNavigateComponent = withAuthNavigate(Dialogs);\n_c = AutNavigateComponent;\nlet mapStateToProps = state => {\n  return {\n    newMessageText: state.dialogsPage.newMessageText,\n    dialogs: state.dialogsPage.dialogs,\n    messages: state.dialogsPage.messages,\n    isAuth: state.auth.isAuth\n  };\n};\nlet mapDispatchToProps = dispatch => {\n  return {\n    addMessage: () => {\n      dispatch(addMessageActionCreator());\n    },\n    updateNewMessageChange: text => {\n      let action = updateNewMessageChangeActionCreator(text);\n      dispatch(action);\n    }\n  };\n};\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AutNavigateComponent);\nexport default DialogsContainer;\nvar _c;\n$RefreshReg$(_c, \"AutNavigateComponent\");","map":{"version":3,"names":["React","addMessageActionCreator","updateNewMessageChangeActionCreator","Dialogs","connect","Navigate","withAuthNavigate","AutNavigateComponent","_c","mapStateToProps","state","newMessageText","dialogsPage","dialogs","messages","isAuth","auth","mapDispatchToProps","dispatch","addMessage","updateNewMessageChange","text","action","DialogsContainer","$RefreshReg$"],"sources":["C:/Users/maksi/Desktop/React/Project/01/my-app/src/components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from 'react';\r\nimport {addMessageActionCreator, updateNewMessageChangeActionCreator} from \"../../Redax/Dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {withAuthNavigate} from \"../../HOC/withAuthNavigate\";\r\n\r\n\r\nlet AutNavigateComponent = withAuthNavigate(Dialogs);\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: () => {\r\n            dispatch(addMessageActionCreator())\r\n        },\r\n        updateNewMessageChange: (text) => {\r\n            let action = updateNewMessageChangeActionCreator(text);\r\n            dispatch(action)\r\n        },\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AutNavigateComponent);\r\n\r\nexport default DialogsContainer;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,uBAAuB,EAAEC,mCAAmC,QAAO,6BAA6B;AACxG,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAAQC,OAAO,QAAO,aAAa;AACnC,SAAQC,QAAQ,QAAO,kBAAkB;AACzC,SAAQC,gBAAgB,QAAO,4BAA4B;AAG3D,IAAIC,oBAAoB,GAAGD,gBAAgB,CAACH,OAAO,CAAC;AAACK,EAAA,GAAjDD,oBAAoB;AAExB,IAAIE,eAAe,GAAIC,KAAK,IAAK;EAC7B,OAAO;IACHC,cAAc,EAAED,KAAK,CAACE,WAAW,CAACD,cAAc;IAChDE,OAAO,EAAEH,KAAK,CAACE,WAAW,CAACC,OAAO;IAClCC,QAAQ,EAAEJ,KAAK,CAACE,WAAW,CAACE,QAAQ;IACpCC,MAAM,EAAEL,KAAK,CAACM,IAAI,CAACD;EACvB,CAAC;AACL,CAAC;AACD,IAAIE,kBAAkB,GAAIC,QAAQ,IAAK;EACnC,OAAO;IACHC,UAAU,EAAEA,CAAA,KAAM;MACdD,QAAQ,CAACjB,uBAAuB,CAAC,CAAC,CAAC;IACvC,CAAC;IACDmB,sBAAsB,EAAGC,IAAI,IAAK;MAC9B,IAAIC,MAAM,GAAGpB,mCAAmC,CAACmB,IAAI,CAAC;MACtDH,QAAQ,CAACI,MAAM,CAAC;IACpB;EACJ,CAAC;AACL,CAAC;AAED,MAAMC,gBAAgB,GAAGnB,OAAO,CAACK,eAAe,EAAEQ,kBAAkB,CAAC,CAACV,oBAAoB,CAAC;AAE3F,eAAegB,gBAAgB;AAAC,IAAAf,EAAA;AAAAgB,YAAA,CAAAhB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}