{"ast":null,"code":"let state = {\n  profilePage: {\n    posts: [{\n      id: 1,\n      message: \"Hi, How are you\",\n      like: 15\n    }, {\n      id: 2,\n      message: \"Hi, it's my first post\",\n      like: 10\n    }, {\n      id: 3,\n      message: \"412412\",\n      like: 123\n    }, {\n      id: 4,\n      message: \"ohohohooh\",\n      like: 1123\n    }],\n    newPostText: \"Hi, How are you\"\n  },\n  dialogsPage: {\n    messages: [{\n      id: 1,\n      message: \"Hi\"\n    }, {\n      id: 2,\n      message: \"How is your day?\"\n    }, {\n      id: 3,\n      message: \"You\"\n    }, {\n      id: 4,\n      message: \"You\"\n    }, {\n      id: 5,\n      message: \"You\"\n    }],\n    dialogs: [{\n      id: 1,\n      name: \"Max\"\n    }, {\n      id: 2,\n      name: \"Angelika\"\n    }, {\n      id: 3,\n      name: \"Aneta\"\n    }, {\n      id: 4,\n      name: \"Zoja\"\n    }, {\n      id: 5,\n      name: \"Andjei\"\n    }, {\n      id: 6,\n      name: \"Marysia\"\n    }],\n    newMessageText: \"Hi, How are you\"\n  }\n};\nwindow.state = state;\nexport let addPost = () => {\n  let newPost = {\n    id: 5,\n    message: state.profilePage.newPostText,\n    like: 0\n  };\n  state.profilePage.posts.push(newPost);\n  state.profilePage.newPostText = \"\";\n  rerenderEntireTree(state);\n};\nexport let updateNewPostChange = newText => {\n  state.profilePage.newPostText = newText;\n  rerenderEntireTree(state);\n};\nexport let addMessage = () => {\n  let newMessage = {\n    id: 6,\n    message: state.dialogsPage.newMessageText\n  };\n  state.dialogsPage.messages.push(newMessage);\n  state.dialogsPage.newMessageText = \"\";\n  rerenderEntireTree(state);\n};\nexport let updateNewMessageChange = newMessage => {\n  state.dialogsPage.newMessageText = newMessage;\n  rerenderEntireTree(state);\n};\nexport default state;","map":{"version":3,"names":["state","profilePage","posts","id","message","like","newPostText","dialogsPage","messages","dialogs","name","newMessageText","window","addPost","newPost","push","rerenderEntireTree","updateNewPostChange","newText","addMessage","newMessage","updateNewMessageChange"],"sources":["C:/Users/maksi/Desktop/React/Project/01/my-app/src/Redax/State.js"],"sourcesContent":["\r\nlet state = {\r\n    profilePage: {\r\n        posts: [\r\n            {id: 1, message: \"Hi, How are you\", like: 15},\r\n            {id: 2, message: \"Hi, it's my first post\", like: 10},\r\n            {id: 3, message: \"412412\", like: 123},\r\n            {id: 4, message: \"ohohohooh\", like: 1123},\r\n        ],\r\n        newPostText: \"Hi, How are you\",\r\n    },\r\n    dialogsPage: {\r\n        messages: [\r\n            {id: 1, message: \"Hi\"},\r\n            {id: 2, message: \"How is your day?\"},\r\n            {id: 3, message: \"You\"},\r\n            {id: 4, message: \"You\"},\r\n            {id: 5, message: \"You\"},\r\n        ],\r\n        dialogs: [\r\n            {id: 1, name: \"Max\"},\r\n            {id: 2, name: \"Angelika\"},\r\n            {id: 3, name: \"Aneta\"},\r\n            {id: 4, name: \"Zoja\"},\r\n            {id: 5, name: \"Andjei\"},\r\n            {id: 6, name: \"Marysia\"},\r\n        ],\r\n        newMessageText: \"Hi, How are you\",\r\n    },\r\n}\r\n\r\nwindow.state = state;\r\n\r\nexport let addPost = () => {\r\n    let newPost = {\r\n        id: 5,\r\n        message: state.profilePage.newPostText,\r\n        like: 0,\r\n    };\r\n    state.profilePage.posts.push(newPost);\r\n    state.profilePage.newPostText = \"\";\r\n    rerenderEntireTree(state);\r\n};\r\n\r\nexport let updateNewPostChange = (newText) => {\r\n    state.profilePage.newPostText = newText;\r\n    rerenderEntireTree(state);\r\n};\r\n\r\nexport let addMessage = () => {\r\n    let newMessage = {\r\n        id: 6,\r\n        message: state.dialogsPage.newMessageText,\r\n    };\r\n    state.dialogsPage.messages.push(newMessage);\r\n    state.dialogsPage.newMessageText = \"\";\r\n    rerenderEntireTree(state);\r\n};\r\n\r\nexport let updateNewMessageChange = (newMessage) => {\r\n    state.dialogsPage.newMessageText = newMessage;\r\n    rerenderEntireTree(state);\r\n};\r\n\r\nexport default state;"],"mappings":"AACA,IAAIA,KAAK,GAAG;EACRC,WAAW,EAAE;IACTC,KAAK,EAAE,CACH;MAACC,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE,iBAAiB;MAAEC,IAAI,EAAE;IAAE,CAAC,EAC7C;MAACF,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE,wBAAwB;MAAEC,IAAI,EAAE;IAAE,CAAC,EACpD;MAACF,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAG,CAAC,EACrC;MAACF,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE,WAAW;MAAEC,IAAI,EAAE;IAAI,CAAC,CAC5C;IACDC,WAAW,EAAE;EACjB,CAAC;EACDC,WAAW,EAAE;IACTC,QAAQ,EAAE,CACN;MAACL,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAI,CAAC,EACtB;MAACD,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAkB,CAAC,EACpC;MAACD,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAK,CAAC,EACvB;MAACD,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAK,CAAC,EACvB;MAACD,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAK,CAAC,CAC1B;IACDK,OAAO,EAAE,CACL;MAACN,EAAE,EAAE,CAAC;MAAEO,IAAI,EAAE;IAAK,CAAC,EACpB;MAACP,EAAE,EAAE,CAAC;MAAEO,IAAI,EAAE;IAAU,CAAC,EACzB;MAACP,EAAE,EAAE,CAAC;MAAEO,IAAI,EAAE;IAAO,CAAC,EACtB;MAACP,EAAE,EAAE,CAAC;MAAEO,IAAI,EAAE;IAAM,CAAC,EACrB;MAACP,EAAE,EAAE,CAAC;MAAEO,IAAI,EAAE;IAAQ,CAAC,EACvB;MAACP,EAAE,EAAE,CAAC;MAAEO,IAAI,EAAE;IAAS,CAAC,CAC3B;IACDC,cAAc,EAAE;EACpB;AACJ,CAAC;AAEDC,MAAM,CAACZ,KAAK,GAAGA,KAAK;AAEpB,OAAO,IAAIa,OAAO,GAAGA,CAAA,KAAM;EACvB,IAAIC,OAAO,GAAG;IACVX,EAAE,EAAE,CAAC;IACLC,OAAO,EAAEJ,KAAK,CAACC,WAAW,CAACK,WAAW;IACtCD,IAAI,EAAE;EACV,CAAC;EACDL,KAAK,CAACC,WAAW,CAACC,KAAK,CAACa,IAAI,CAACD,OAAO,CAAC;EACrCd,KAAK,CAACC,WAAW,CAACK,WAAW,GAAG,EAAE;EAClCU,kBAAkB,CAAChB,KAAK,CAAC;AAC7B,CAAC;AAED,OAAO,IAAIiB,mBAAmB,GAAIC,OAAO,IAAK;EAC1ClB,KAAK,CAACC,WAAW,CAACK,WAAW,GAAGY,OAAO;EACvCF,kBAAkB,CAAChB,KAAK,CAAC;AAC7B,CAAC;AAED,OAAO,IAAImB,UAAU,GAAGA,CAAA,KAAM;EAC1B,IAAIC,UAAU,GAAG;IACbjB,EAAE,EAAE,CAAC;IACLC,OAAO,EAAEJ,KAAK,CAACO,WAAW,CAACI;EAC/B,CAAC;EACDX,KAAK,CAACO,WAAW,CAACC,QAAQ,CAACO,IAAI,CAACK,UAAU,CAAC;EAC3CpB,KAAK,CAACO,WAAW,CAACI,cAAc,GAAG,EAAE;EACrCK,kBAAkB,CAAChB,KAAK,CAAC;AAC7B,CAAC;AAED,OAAO,IAAIqB,sBAAsB,GAAID,UAAU,IAAK;EAChDpB,KAAK,CAACO,WAAW,CAACI,cAAc,GAAGS,UAAU;EAC7CJ,kBAAkB,CAAChB,KAAK,CAAC;AAC7B,CAAC;AAED,eAAeA,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}