{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maksi\\\\Desktop\\\\React\\\\Project\\\\01\\\\my-app\\\\src\\\\components\\\\Dialogs\\\\Dialogs.jsx\";\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport Message from \"./Message/Message\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport { addMessageActionCreator, updateNewMessageChangeActionCreator } from \"../../Redax/State\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dialogs = props => {\n  let dialogsElements = props.dialogs.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: d.name,\n    id: d.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 52\n  }, this));\n  let messageElements = props.messages.map((m, index) => /*#__PURE__*/_jsxDEV(Message, {\n    massage: m.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 60\n  }, this));\n  let newMessageElement = /*#__PURE__*/React.createRef();\n  let addMessage = () => {\n    props.dispatch(addMessageActionCreator());\n  };\n  let onMassageChange = () => {\n    let text = newMessageElement.current.value;\n    let action = updateNewMessageChangeActionCreator(text);\n    props.dispatch(action);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogItems,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: messageElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        onChange: onMassageChange,\n        ref: newMessageElement,\n        value: props.newMessageText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"div*2\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addMessage,\n          children: \"Add Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_c = Dialogs;\nexport default Dialogs;\nvar _c;\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"names":["React","s","Message","DialogItem","addMessageActionCreator","updateNewMessageChangeActionCreator","jsxDEV","_jsxDEV","Dialogs","props","dialogsElements","dialogs","map","d","name","id","fileName","_jsxFileName","lineNumber","columnNumber","messageElements","messages","m","index","massage","message","newMessageElement","createRef","addMessage","dispatch","onMassageChange","text","current","value","action","className","children","dialogItems","onChange","ref","newMessageText","onClick","_c","$RefreshReg$"],"sources":["C:/Users/maksi/Desktop/React/Project/01/my-app/src/components/Dialogs/Dialogs.jsx"],"sourcesContent":["import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {addMessageActionCreator, updateNewMessageChangeActionCreator} from \"../../Redax/State\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogs.map((d) => <DialogItem name={d.name} id={d.id}/>)\r\n    let messageElements = props.messages.map((m, index) => <Message massage={m.message}/>)\r\n\r\n    let newMessageElement = React.createRef();\r\n\r\n    let addMessage = () => {\r\n        props.dispatch(addMessageActionCreator());\r\n    };\r\n\r\n    let onMassageChange = () => {\r\n        let text = newMessageElement.current.value;\r\n        let action = updateNewMessageChangeActionCreator(text);\r\n        props.dispatch(action);\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElements}</div>\r\n                <textarea onChange={onMassageChange}\r\n                          ref={newMessageElement}\r\n                          value={props.newMessageText}/>\r\n                <div>\r\n                    div*2\r\n                    <button onClick={addMessage}>Add Message</button>\r\n                    <button>Remove</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}