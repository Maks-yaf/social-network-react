{"ast":null,"code":"const ADD_MESSAGE = \"ADD_MESSAGE\";\nlet initialState = {\n  messages: [{\n    id: 1,\n    message: \"Hi\"\n  }, {\n    id: 2,\n    message: \"How is your day?\"\n  }, {\n    id: 3,\n    message: \"You\"\n  }, {\n    id: 4,\n    message: \"You\"\n  }, {\n    id: 5,\n    message: \"You\"\n  }],\n  dialogs: [{\n    id: 1,\n    name: \"Max\"\n  }, {\n    id: 2,\n    name: \"Angelika\"\n  }, {\n    id: 3,\n    name: \"Aneta\"\n  }, {\n    id: 4,\n    name: \"Zoja\"\n  }, {\n    id: 5,\n    name: \"Andjei\"\n  }, {\n    id: 6,\n    name: \"Marysia\"\n  }]\n};\nconst dialogsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      {\n        let newMessage = {\n          id: 7,\n          message: action.dialogTextArea\n        };\n        return {\n          ...state,\n          messages: [...state.messages, newMessage]\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport const addMessageActionCreator = dialogTextArea => ({\n  type: ADD_MESSAGE,\n  dialogTextArea\n});\nexport default dialogsReducer;","map":{"version":3,"names":["ADD_MESSAGE","initialState","messages","id","message","dialogs","name","dialogsReducer","state","action","type","newMessage","dialogTextArea","addMessageActionCreator"],"sources":["C:/Users/maksi/Desktop/git/social-network-react/my-app/src/Redax/Dialogs-reducer.js"],"sourcesContent":["const ADD_MESSAGE = \"ADD_MESSAGE\";\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How is your day?\"},\r\n        {id: 3, message: \"You\"},\r\n        {id: 4, message: \"You\"},\r\n        {id: 5, message: \"You\"},\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: \"Max\"},\r\n        {id: 2, name: \"Angelika\"},\r\n        {id: 3, name: \"Aneta\"},\r\n        {id: 4, name: \"Zoja\"},\r\n        {id: 5, name: \"Andjei\"},\r\n        {id: 6, name: \"Marysia\"},\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n            let newMessage = {\r\n                id: 7,\r\n                message: action.dialogTextArea,\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (dialogTextArea) => ({type: ADD_MESSAGE, dialogTextArea})\r\n\r\nexport default dialogsReducer;"],"mappings":"AAAA,MAAMA,WAAW,GAAG,aAAa;AAEjC,IAAIC,YAAY,GAAG;EACfC,QAAQ,EAAE,CACN;IAACC,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAI,CAAC,EACtB;IAACD,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAkB,CAAC,EACpC;IAACD,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAK,CAAC,EACvB;IAACD,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAK,CAAC,EACvB;IAACD,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAK,CAAC,CAC1B;EACDC,OAAO,EAAE,CACL;IAACF,EAAE,EAAE,CAAC;IAAEG,IAAI,EAAE;EAAK,CAAC,EACpB;IAACH,EAAE,EAAE,CAAC;IAAEG,IAAI,EAAE;EAAU,CAAC,EACzB;IAACH,EAAE,EAAE,CAAC;IAAEG,IAAI,EAAE;EAAO,CAAC,EACtB;IAACH,EAAE,EAAE,CAAC;IAAEG,IAAI,EAAE;EAAM,CAAC,EACrB;IAACH,EAAE,EAAE,CAAC;IAAEG,IAAI,EAAE;EAAQ,CAAC,EACvB;IAACH,EAAE,EAAE,CAAC;IAAEG,IAAI,EAAE;EAAS,CAAC;AAEhC,CAAC;AAED,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGP,YAAY,EAAEQ,MAAM,KAAK;EACrD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKV,WAAW;MAAE;QACd,IAAIW,UAAU,GAAG;UACbR,EAAE,EAAE,CAAC;UACLC,OAAO,EAAEK,MAAM,CAACG;QACpB,CAAC;QACD,OAAO;UACH,GAAGJ,KAAK;UACRN,QAAQ,EAAE,CAAC,GAAGM,KAAK,CAACN,QAAQ,EAAES,UAAU;QAC5C,CAAC;MACL;IACA;MACI,OAAOH,KAAK;EACpB;AACJ,CAAC;AAED,OAAO,MAAMK,uBAAuB,GAAID,cAAc,KAAM;EAACF,IAAI,EAAEV,WAAW;EAAEY;AAAc,CAAC,CAAC;AAEhG,eAAeL,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}